/*
 * ==============================================================================
 * (c) 2019
 * Fidelity National Information Services, Inc. and/or its subsidiaries - All 
 * Rights Reserved worldwide.
 * ---------------------------------------------------------------------------
 * This document is protected under the trade secret and copyright laws as the
 * property of Fidelity National Information Services, Inc. and/or its subsidiaries.
 * Copying, reproduction or distribution should be limited and only to employees
 * with a 'need to know' to do their job. Any disclosure of this document to
 * third parties is strictly prohibited.
 * =============================================================================
 */
package com.apex.platform.stringmanipulation;

import java.util.ArrayList;
import java.util.List;

public class SpecialPalindrome
{

	public static void main(String[] args)
	{
		//String s = "abcbaba";
		//String s = "mnonopoo";
		//System.out.println("Index Of " + (s.indexOf('o')));
		final String file = "D:\\Apex\\files";
		long startTime = System.nanoTime();
		String s = "idfbidecgjjfdfiffhjeeegdbbdfbhfikkdfdfkihikdkhhgefdkcbdigfkiggkgedckicfbdeccdgdjidghgfefjfjickhdhbfdeefegefifhbijfeefghjfeheddhihbcikeeekeeiibigcehjghkkkcddghbhijfhkhgfcgfcfdhegiiikffdcgegbidkjecbeeejfeekhgiidjejkhigdkjbcihidcdfgfeebebhbbkhfficjeikkkfdjkjdjfkgegfbkkjdegidfebebedieikcgggkggedcghdikihfdiedhccdikijhikgjbebhdjeijkgcjgcefghjddkdhgfihiihckccgjkdhejcbkbdejifjcifhecfiejjhjikcghcjdheeigghfcgdikfcfgfdhkdbekccjdjhfejdhdfkikhcfbjddejfhkfedbedbkjfjkjhikdjdfhhijkhifbdikedehbkgeghfghhkfdjbcejheeijdgggdckgiddfidfhffkdkhbkekechfdcifddjijjehekcbdddkbcibedgedibcbfgfejkckbbkceijgciekdkhhgbfjjbjfibiieceebijgbckgijffdjchkkbigjbbgkbfhhfihhcjhfefcgegbihefhcicfhehfdjbcckbfeeejcgjhigjbikhjghchgkfcdeddfkcgifjhfcfbceiccecgkehibkccefkejckeiekhfeiikjbkgkhgjkbhijjiekfgebbkeffdjigekkfibckccickhifijkiggjbedeecifidbfbkchfbfebbdjjkidfbehjjfeihggcgfbkjfigjjjebgchgbccjikbgcgidjkghkbbbedghfbccjifjkhhdkehchjkcedkkejjjbecbbjbkkeejekdifhghjefgkihjhjedjbdfjdeehkbiibeckdeficghgdghibchididfkjebgeekdhcdjchdihcfjkhfejkgfhgfgchhehhbhfciiifidehjhcgejgdcjhckkgejdjfhjcgbjeebjekbddbdkgcfbfdkiecfibidehiejcehkciejfbfckeecgcbjkekicbhddhhheggbcecdhdbghgiejgjidkbjebchgkjdiefcdjjdgjdkjjggbkdcchidbcechfdkekjjicfddfdjfhbgjcdefjkbcieficjkjjhbhggfhgiiefhejddbffjhhfdccicdkbgifkkdfbjfigbchfgiifekijkiefkecggihebhiebbcjhgjjcfehikfekhfdgejighggffkegikjkkegdfhbfgijdhcgjieceijjkhbchkikcgihbkihbghfchehdcjhkjcfkhecbccdcbeiekhhekjcdkhbjbghbbkfeeibkijgkeikgchhgikkjgjkcbifbkfjfbbgfifbbifcbebcjbhkdjccdgffgbdecffigfdiegkjgkjeefjbhfekiibckchfejbghbdiceeekgekhfejgfgdgckhgiiijcfhkicicfhkegcdjkbjkdikededeegdfjbbcihjhigcgggehecbfiijekjgihhfhgcgkkjkikhfjhdbdhjgkggjgkcdicjighbgcecfjehgeebjkfjhgkcekbefcidggbgefikgecbbkdhdkcjebfeijdhihfjddckbegcekbibibkgfidfekbgegbddcdicekggjijiifebbcbkeddhdffdghgbhjhdckbgdccejidbjdggjgiggkchfbgckghcdfjdjihjcibecbdbbkhbkfieddfifeieejkbiffggbkkigfgdbbgbbigdegbcebjdfffbbgihddicbcjggdfbjfdgkffdbkgcddcfhbkfdfkbkgeiiikbgdcjeifkgdjkfdkdgggicjkefhdbkkdkdkgbkiekggjiifbhcbiicbbhejkhccggikgebdhghfffgjjcedfdikjiefjbkcbgkfgihghbjdfhfghjdckgkcfehichibcfjdkbjcjdbhbbiecjbgbddhdfekkbfbdhdjhickkcfbddfcfkbkdfddkcgdccgbffjffgddjkgehkihgkjjicjdbiihbikijcgfccejgbejehiedgcfkfjdcgefikcgebghkjjicehjjhbghkdgfgjgecghebcjjjcgkhcjccbfbhfghjdbejdbfbjbbdiicgbejjjbkkcikbfbfbiigkikdhcdhiddfjkcbeecffkbdfifbidicceibdfegjghicbkhjjiffgbifhbhheikkfjiekibchgfbihkfkhgjckkkhfjhbhikighciehhjhdbhfjkfdjjgkkgkdeckiggcbghfjjeicifedhhfdcickjecjhfdfgehkgicifjjgdiiijechejkgcbkhkjeikkbkggbckjedcdcgfjjkffgbcghfcbfiffecbikffdfcehbjhbbfddgbhkhejcgedchkcidebihcggkigjgcffdgjccgejijdicccbgfkbkkkjjhhifihhecjecfbbibbkgidfbhjdecijikdeehfchgchcicihjdjghdckhcbijhjjdjegkbkieihbhbkcjhbfdehcjkfiedigchjgdjkhckgiegibkgggikbiigeefcdbfjjhkifhicghkhhgeckfbhjfgjbgbkfgjjhghdfjbiciiccjeghchjffbikjdbkhdfkdbcchhgbkbkddkbjfbgihcdcgdbfihijjjkhbfdcdiieekjhgjfckjfbgfifhhgdhbihhdfbjfkkfedhieiifcccchidebbddgifccgkfhdbgbbggggbgeehijgeicjccchkfcbkkjfkkefkjhchgffkfkbikjghkekhgbjjhfegcjchkghddjfididdhgbkhbehdchfbbdijicehdghcekkfejgbffegddddhjifjgcbecgjbiiechdfbcidghifkbghcddhckgdhgchbefhcbcekbibfjhfgkdjhbfgdeifcegicjhebfciigcdfibbbjijjejdhieifhkkhibhfhkehjjgickcgfgcgbccfgkfbebkdkjjfegjehiifcbihbebddibhffejgifjdeijgdibiggkedkifcfcjddigecdbfekgjdekgbgijgbihfdkddihgdfdebcieikgfifhigcgiebjcefgeddhdehgijjddebigeedbicjhjcckccdjgfcbijiefgedhbhjihkdjchkfdihdggicciehgjckdhfgkjkejhjhebjidfggefhcgjigjdkeichihbbghcfbeihcbcbikcfecidhecgjhihbfdjejfgegbkejbkcbihkkffiieheecffdibbebhckbiffgcdbchecdchiffdijffehkccgbgkigichegcfigcchcbcijjkkfdbhkffcegfbcijgkbjgjgeibfhikfeifhjkekikgcjgbdefgdjfhjefcckbiijhgfiiddbfdgigfkkhfebkhfediefhjckkjbhkeecjkdjhekhcgbdehkchdghfffkhkejjcjieekjbejcghckcbkcjekhbjdfiffbicidfdhikcickidffejbdgkjdbbkeihcgbebbheehheeikkjfdbkefjggbeecfkkbheekkbgchdbidebfebedfiefeckjgcdeckgkbekcdkiegkeikjccibkiichefgdfdegdhhhdgefifhgghdjddhcbggdejjbckcjicifbceddkfekififcjfikjhhekjkebegbhhcgdkdgicjehjhbkhjjjbefkgbeefigckgeibbjejdkfeiifkgchcbfhikficbdcfdhecgkhfchjdejbjbfciffhebcihbcifegjfgiegbchdgijhkijihcdkkhfccjickkcbhhffjchicdgfkehckdiebedkddbggcjkbckhkgeedehjcehfhgdhhkdbgigcihgidhfcecbieegdjddfffgjdhbgckbkcfebhgfbhghdjcbjffikdibjghbeijgcicekcgjckigdgebegcigbdcfhckkdciijfjjffkhbdfbddfkkbcbecdefhjcecbhgdgfiiichfcjkhkdbhgbgiejgdfgekdgkgkdijbdgdbcgidjbchehdefffbgejfbcggiiiccbhekhcedbhddhebkhkgdgjcdgjcbhkjecbhedikbgjfjcgjkhiighfgbgbhgdgebfihecfgikjdffcdjdkfijbdbhieefkdehkejdffgeddgifdfigdfbidgeedideefckiebgickhehkgfecgibihdghdckhgjhjbeihedgcedjceifecggjckejbccggehhjbgbdkkieedkjhhcbghfhgbfjcdkdifcjecckjhcddjikjkkkggbbdkkbghcjkddidjgfehhicbiegcbbieebhjjbcbfifkgkbcfbehkkkgfkccjfekbeckcbejehddkihkcgcbdiidjjcjebebdkbdbjijcciffeffjghgejkefkkcbfbgdcgijibjhifjhbkdihijgjhgdjcgcchiiedchihhgckjebgghkfbehcejifkfgkhbbgfkcdkkhcfebcjefijcbggjjcdfkgchgigjeeecijckfidhjhefbdfffbgkjkkdbifhkghjdekdjebecggcgchcijdiikckfgibegfbcckebbhgkjjigkddfkeifceidedgkdfgcfddbecfhhjikefcgcickbjkfcgjgfcjgghcjehbfbbkciffdgegcbcjjkgggbbjdegfgkjhhfdhghjcbijhkfiiddhchfkdidfiegkdbckeckigccfjfeighbdgegkicickdcccdjkkcijhidcgefeffcikcidbckkdggihbfgdkkfkjhefhdkeedkhhhbgebkhfgdihdfdicihkehihkcgfcikigbjceckdkficdgdfdhjcicjkjjeeccgcjkccebicbckbcfjjhbkibfijgkgfkdbjhjkckhkjjgdfjgbibfkbkfkihhhhddbckdecfjejegfddhcbkegbjedkfkgbeeckfbcjcegkcehdcdcibihbbhjidkjgffkdjkbbjejibjeihjdgjdgchjdhfgfkbdfekjibcjbjcdfgibjdieffdcdghbgffgjfeiigkicbhekgihehdbccbidifeegjfkibefdigccdchhgjffefbedbfkggbihjhkbgbiccigjfbhdjckkejjjhfjgjkikdgegjfhfhihbcjigifdhegbfegbcfgcbgeffkfiegdgcifigekbfbdibdbgbbihegidiijjeihdcgdcekggbhfbkcgfchcfeffdkjcdcbhgfcibggchkeehddiicibhgkcfcfecgfckdgbegkgghkhiehhjfceeghhddchefhdcjkheccdfgekikfkefbghkhbbbfbhccibcfjceibeffcccbjkibkbidfhkdjifkifdighggbgdjdbbkjdekcccifgibbfidckchdhdehfejbhegecbebcbeedddbcgdcfijdegjeddfkdhibcehhhkcgcffcfbfghikjihjicjidkkjjbkhiekjgffekihijdbkccdkecjhkbiicchdjfbecefhiifjkehjdbfdigiekikijbckkjkbbifhjjiijhikkhhibijgbbhkbefkeehehhjigkjehiggbdbcbbgdfhgkhfhebhdgedcbjkbeikcihiieiecdfggdiidfegebdihfikiiihcejdjbbkjehgfficcbhfbdjdkjhbgjdgbhggedhhkdfkfhbbjkdcejijfecdgiejckkdcjhdcckhcdhkdhgkkhcjhjgdfedfibedfeekkjfjkchcbebfckdiefgedcbgbifdjkjiccbekcgbbedffdkkcibghifbkckijkgfkhikffbcgchffbcfckdceickgcikcdhhgkgfheecjkbgeekfdkhhjefbcbgjgbeefgfkjjdcgdhbjckdigbcgejeickebfgejjjjdhkdcccgfefhhekfgkhkjicheegikiiibgjeiehedcehgikkdcfihfhhkcjfhgckjefiigbgcfebfigeedkdekfeccggbbhejfjcjbighgfjjggkcbjgdkjigjfcbifhjgkihebcjhkffccefdkifhbggjcbcedickefekebfigikbbebghgjekegifdecfbhidgjidfkbdkfcjjijcjgikjfgdbbfdjfechffggedfbegfcbgdbgffgkekibjhkfbhbffkcgigfjibhbkhcicekffiicddfdidjchfdcfjkkccdidfckidjcidfjihghfdjkdgigekdfebfdjijjgjdcbcejifhgfgkhjjfkbjgdgdhdhffbhjcdikcebkdjecchichhidfjbbjkbbhgddgicbdkhckiigekddicddkfkfidfcgbhijckkhhkidckibbkdcjdkjccffehfkhkgihcibkkdccfgjhhkgichccbdfjfbgbkegkkfbhekhkedhdgfbgiebbkjfdfjdcdhcjihfdeegfcgdijdeikjibddfbjkfekkijjcjkigicfcdkcfggeeeejigecjjjfbigefdfbdfhjcgcbfibgeccbikhgedbigbijjkghichfbgdjgijdcggihbkffiecbhdcfegkhjjhhdfgidbkkejjghjicgekfecgehhhicbbbiffikihfebgcfhkegkhfhfkdggcgehgdijkhiekgcjjdciiffijbcjbjfkfddebebijeghjdjjcibggkccgbgkjfkebbgbigjgfkhjfgeheebeifbegbcgfcdjcjccdjjeigbkhggcffihkiikchbiebbbhcbefhgkcgdhjddfkebiefehckhjcfhejghikdedcdhfifffcifhjeikideggfjebdhbhfkhijcghghkfbbcijcgkkkgibgkibjdkchcjdhedkiekhjheeeidjhjggdbkdhkbbhkfbgkceckbkkjdjhgjbigefbigibdbdkjdgfejdbhkgfeefkdjccbgjjeddbgigiibbbdifckbgdfbhigjejgiekikbcddibeeididcciikfjbbbejekbfgbdikjikhbigbdfidbcbdifgkedijkggjdbccdffhfhjkcckbicbccidjfkigbjfcjfbgghcgebfgdddchdkgidbdcgijkckihbiifiihhhdegbbjkefjkkhieciijebdhghgeedhccjiihhhhjidfcgcedbeeffdjfkdijkbefiiikikggidfhfgggcgidbhdddbihkhjbdfgjfddbkhjdkkhdeikjkkhfhiedffegjdifjddkgjkeffbchfjhfbikgikkckhdfbfbfbkijhkkeebdkbhfdgffkjbgjdheibjhcdfgbjgfiifjhfkfbhhifdehdcibgjdhhhheifdbhefichjjckecgbecheikbbeebcighefhgeeidjejhccghikjkgkgfbhcdjdkfjkhiichddhihhbfegdbfbcegihfjdgccjfjbdfgbbbggjigddhcdccjdjbfckckcgcfjcjdjhdegkdeedjkejjbeedgejidichgicjfhgdgkjfdcdkcebfhegdbgkjdbjjfegjicjbcfgbcjhkeejfkhbcicjicjbddedggjbbcfgbjjecfkkdigfiigjjeihkggffffbfjkjkidbchkcgkjkeehcjiiekkbffgkjgjeibfhjjdkkhikjdjgdikfihffjdeddbgehefgfccdidbibiihgefikceihfcffgfijidhfjbhfgbjkieffjhchbfjhdkffjgkicfgjjffhigcbkhbebgcfbbgefkbgfbedfdhedhgebdikghgkedfghcbgieikccbcbhjkihefdegckbjdeccichcfecgedibhhhkdefgfkbhckgkgkheegbheidkbcchjicdddgfjbhfjkcikhbkkkicdfkjeeifeihcccefkfjckbejeihkhiheiefibcjgibhgifbehjjjhjjhbiijkhjdkkbiedikcigeiebgchjhehfiebgkkfcgekebgjhdbiichfeikgkddgbcjcfiehekeckffkibchcdbfbhcbciejjkdggckchegfigghehgfbdidbcfdiijkgiceedicickkbfgggjdjgdgcbifickdkjddkfcbehdbkbkhghdeffbddkkbhdfcbbbkiedjbdifghgdbhibdckfbdeghhfkjbgedhhgdjhbibbjdjhcjkfbhgigbhedgbikckcekbgikbcgickihgdbifbhdjkhfdiibebbkhkhgdfcbfffbjeieibkedfhihjegghdejgdjkgbekjfdijdddkedejfigegejdgkedfkkfhbejbjcijddcfdjjejcckbiejhbkcdhfigbcehgbiigkceikdghdfbekhfidkiehkbjfdkbbdjcjcjiigfhfcebjbheihcgbchchhkibdehkchcbfehikbbdhccjigdccgjhedjfchcbgdfhjhhdfjfhghebbcfhdbbkkbcbfgjjejjeehgcbjejiebcehkgiccgehcdedjhbcdeddhffhecghfihedigjfjgdibfhgdgekegjcigfdkjfjjhekfdcckcdhdjcijkhdkikkgedkekbfgkefcdikcbffdhgjigikhgehdgchbgdbhkdgdiiiibddcjcbkfkbjebbkbcbkdfhfkiccekjjdjjfbfjgfihbcbgigjcgijkcefbddfdhhihckhejkidcbfdbddhjkdikjgbjjhfhjjeidgjfeidbbfjkecbdgeekegfgfhiibeicefkjedcgkjkjhdcbjcghefihfcbgdiehkjbikkikjbfjfcfdcchfkkjeidjbgfefkkbdckebfbkjbdbebdbkijhgghkbghhjchdefffbhfhbjefjdjjcejebefiefbdfkjghbfjdehggejdhgghkjfcbdgijkdgjbdkhhifebhkkbcdkkdbkbhgkiggijffjkfbdigjgfckbbgfhidieeefjgjdicjhgihcfeffbkhigjifbghcedfckeichggdcjhbbighigchcbjbhebekhehgegfbjggbjggkjkekfkdjickfbfifeeeciikifkeebcfcefbhekijghbfbjhckkjjfikghjkidbgfidibjfbgiejhbgegfkifijihbdghigieijkicifhgkgkfebjejjejdcidieijhjdbcchdbkhikhcbifeijekbckcggfiebkdjkkgfdhekchjckgbdhhegkdkdeekikkcffddkigfffjhjfgiiegejkgegbgffhgchfdcefcgbekceiibhbijbffkkikfchegdgjfeiebjihbecbekfdciidbbjddckcjbhffdgddbcbghgfgcbfcbdfghhhgedfhjfgkfhjiibjebffiighkidbiihikhjkdggdikcffhbbegjhkedcfbgjjekddecbjcjdcdgjhifiifbibhgkbjfddcedfdgieciddkdkgkchgkicbihcejdfjddekhghdgbgbfhghdgcgbfecekhdkhghedcejchjbhchkhckhgghbbgbjkfgjcbbiichgkiebihfdhkkkjjhjkdhgdbjdcfgiffckkkfgebecfhjeckjhegckcdeggdibfhfihibecjhibeejgdijckhddijbjedhedekkickhhhjigfjkiffdbdbeibdgeehjikejgjdbjjfhefidgdbbidfjkiebhdkbgjkibgfkfceicfgjeffjkghdehhbdbccgceciciekcgdegicfhdkbfidgbkhfdfedkgekbegkkbhcffghkchkgddghjjbgccgjhgcbkekdcdfggfceidkijikcjieiijefchhjghjbidfjkbkfikkbecbejdcgkecficbjgghchjfhefcgjccbiifggfjfdkfechhdbgejkfckiefkikbjbfhjiggihcbbjfhhkhgkkbhffheicebiegihicbdbjgicgibecefkckgcfikdkhhcjieddkfffhjihibdibkgfcikekfdcidjfegejjjfjbkjdbjgefhdhciceedkdjgifjcgcdejibhjkhkhecjhfjikbbbdfigecchghbhgeegbfgkieebhihidhjdifdicggbkdghkkfkjekkhbffikchcbcbcbceeeciebiikcikecbjgdcbdfbkbjgjeghjkbdihhcfcidgfgfejibhichbcgbcibbjjfibfeeekffjgcbfjkebehdegcidfbkkeeifghbibhgcihekbcjkgiigfbbccghcgcddffkdkccbfhjkdjdggjkgjibkhcedefjccbcfbdeegeeghchhjggfbkkekdchjiebjjgjecifhjbkjgibjhjdbhhiejbeegijkdhfkkfccdchhcfhhdhjcdibjcdegicgddkddfceihgdidkfekcbdbbdckjiihccddcdgdedgjhjbgffkdbijehdhcbijfhidfdhjbfggckfcfcckffdkkckgdkbhcikhcheehbigihekdhkhjgeiikekdgkfdikgcejgggjcjdgkbkfffcechheckbkjfcfijjjdbgkjfcgceibbhhbccbfhbbhjjcbkbfhcdicdbiccikeffeijkkdicebcdighckifjbjfhgjhdickgbdfgcidejijdkhkifbdjefdfbegicedhdkkdifbehhhhkeibdjhjfjbfkkikibckhjfdedbbfeghbdddjehkjdhdcdhggckdcjikgidjkkhgegdjieffgihjgefhkkicbebedcbkdjkbjeceiddgfbhfffgecbjhjehfekfdfiiggjeikjgcbbbbjkkdigfjfbgebjfffhidgejdbhkgbcihgfgegjeecjbiekjgkhfikbcfeccgdidgikgckhjchkfbcfdeiibebdgefbjbjedighfdeejbbfbbhhiebegehcbghgiccgibdkbfbhfjdjiihgehfikbhjfkdbihcejfbkkedhbkhehbggdcdekggbcdhifcgikkdbhfbejfbbkbddeibekfbkhdhdkebefeidghkfjgihdbhfidfhhgfbfjhccfbbkfhjbfidbbghbdbjkdhdhdjjbbgdebedcjkecfiibihkfdffkkbefbeegiiebghfjfhicifchhehfcjjcckejdifbickefhkfjkckgcfkedigcbeibggkkigcgbddhgdgdjedgbbddfdcchedjdjfeeeideekidjcgbhjgidjgkeeffhchhbbhkihcgbjeibehfdkkefeghfhhkbjcdehejegdgebhcdghjcjkjgddehfkifbgdehdgcebkjddkbedicbibgjibbikcghedieidikiecehebbeebhgjkcfjddckjjggfckidejfdhcdhfefeddcjdcjcdhjgfjbgkegdkjehedechjdgeehhffcjhdfkdfdcfcgkbhfbghhdgfhgjhibbigfffcifbfdfkficffihkcckbdjbfifeihfdhhcdfhgcjefkgfefkjgichgcgihkfcchgidihckhkkckejgcidjichddgjkjcgkdciehbkebjgdfjiekhijjifiiedbefckedgfhddgfbfjegebjkckgicjhehkhiekgechbbccfbbifcejkkkedbbjhbbdfebkdikgbekfchgfgjdbjgfjjgikfbiecfcjhjdehbkjjbccbgbefifgcicigekcfgikkdecdjfjdeikedbeicikjfbccejegfecgbdhkeffghckhfbcgbgcigifgbkghfifhffigkebfgfcgkdgbkfcbckgegdbhgbbccjikcijbccjkdigbehdkhbeedjjkeigbfhehdbbhkfgkgeefbjcikgcfcgjfbffijjkdichfkjgkbccjdbgkffbegiedfcecgbjhhgjffkgdhdhdigdgkhcfeefkcjjbhieikhchcjhedhjddkefcdbhjgkidhejhfdckdbiefbjkiegiggeeihddbikkeehkgkdcfhchfidbhjkjhegkfeicjheebfjbjgekifkkdffdjiikgjeebikihbebdcihekjcjcfbbdhfgjikikhdbdhchegkkbeijeijbhkgdehgcckkhbkbjefjcijjdfjcgcbekjjhifhikgdcfeebkbkgikccccggbehfjggjjedbfbgfhfgkiebfjdkijhjbfbjcggjcckghccccchhdkbidghjeeedkgcbgbkhddgecfbgehcifkbfhkicbcedgjdicehhddfkbddgecgbkgedfceghifhkkhgijdidbfkkdjkkehdibbgkkkbkhbkhdbikjjbiiffdhkkdhbgickgjbegbfechbddffkjikdcckckhdfbcghffkdekdjeiifbfdidbfijdgdigcibbkecfejfbgcgfgkdfihgkiffgdkcghidfdcjdihchkbecdefhekhbcjjfbebkihbiejgjichhjeehjciiggjfgdibhidhhgkigedgefkibjhjiefkieeiejghijfihcjbgibdgfckjgkgghjkffbigbdiiejfgdjcfeddigcgeifeckeeicdikibgbjigbkfehbjfgifekgikefigbfiikhbikgegecgeceijfgghejeihehhidebijdkdeecghfjifjiidegbjjhehkckhdkdkhcejdhbfkgcjgfjcggcfjkcjdckbgkjigbdiffkiebcifjfbkjbficbbdhdcdhgejhjjcibkjhhkkfbfjggfkieehdbjeddbkcicdkgfegcjiddchccccidbikhfjijfjkbekihieffdejkheddihbghbcfgciegcecdkkficjcfkfbfghbhejfeieddcjggddfegbhjkdccbfdgkkekgfbidfdedefhihficiifdbbhkjjhiggeggdcjgddigfigefgdkjbbcfiikbbbgehkdhfjibikkfiiggdfgefhfgcffcdeghfkkkbjgcfcdgigighkccjbkdhfkkjgbhjfkgegkibcedcbjghjfghejgdhccjkikebdgeefekggbekeeghbffhdjideefibbikjeeedijbhdkfkcjhiekhfkhfbkckchjejechgebdcffegkjhbeffejfijdffeijebcbcidbifdejebkehkgcgkkijikdkghhhgjhehbjckekjikdjeiejbdceichihcfjkddfegibfdffejgehkgiedfghdecibcdhdkkejddhefdijjcbfkjihhegcjkcefjcijkjdkifjecibbbbhikecdgejgkgefeefgeggighhkjhedefjeeejjdkbijcifeeikcgigbcbfgkebddkkkdchjfeccfijihcdegkjecjiegbhjhhfcfbdjgjigjjfeeighkjgidggbicedchiibhbgkgiiiddidccejcfehkekfkjcgcgcddfjcieghbdjdghechghfdegikicjgdkjbhcecgkfbegdgedhkeiijihciekidhgkjebbceihkkibkgbbjefedjdchbikkbcchfcjhffkbggbgcgddechfkijfhgkjebiegddidkegihhcdjjjddjdekihdkjhjdjdkigegijfjhjkgjeidjjhhhebdbgkkfhhcbjchdbgfeehcggdcbgjeghdkejfckhkkgecdeebfkcefjihgekjiggkbddebijjgddcghgbjchcdjgjfhkhghdhfdfgkkfghkkgjijfjkigbikjhiifidfdedeeehjdijgdebjjidjicjedfgkijicjefgjghjcicikikgdfibehfhjjdcgjgbbkjiicbfceikfkdfgeekjegecdjgdekcffhfijebedceecdihdighgjcbihidjkedekbdeeffkdgkbhdechjfdkkkkifkcehcbdkebcjicgbdcbddfejejebddfdgdfihfkcbjdiebbbidihddeegbjcddfgcchjbjjckjfhbdfigcjhgbhedhgkkjgdghdidgdeicekicefkhkbdichekfkifefcbbgikhieieihikdiggjdkkgdcdbbkgkbfkkefeeccicfecdhdgfdbkeikjhiffdhdikbbdecejkecekfbdfkfdibhdfcifkchbikfdfiffjdgkbkhjdgjefcikhchhdkkbicfedhkhbdkibcfbhgceibchgidgkjefihdhijgbficbffegdejhdhcfkeekifhcfdghbcickjikkggcfbfdjhkcjgjdiijkhdjkbihijbkcedcijkfjggfjckcghibdfdebbhkjeebgijdbkkhjfbecfjkghfgeghbkehjcfidfhfiibdhgkcbejeffdjbgjdbdkhjfkgeicbfcghfgibicccidcdjbchgbeeefijkjefejjcgjbkcfbhdkcihhgjhckegdfbffjbckbjedbjgigejgecghkikhfkbggkfbihkdcfekkjjjdhbgdbcfbggjigdgkcjekgbceechdgcbifbifhfifhbjgfhceeijkfihdfbehbekkfdfihgdejbckbifeggjifhcgiffhbhijjdgkiekeedidcdjcdcdbigieefghgfiggjcedhcjhidbhgeffegbjhbbjjjejcfcdekjikdfhjibikffhbfhdbhghgebkhffcgjjkfggdbhgfifechjbgedfgeddfkggkkjjhikhcgkddehbghjgebkejjjbeehgcedbfcdjbfcibfejgkbbhdgedfcgkkdjfbhhdgikkichfhgkffkcjkehgjbbjkcihjcfhgihhdficdffjcfhffeighgeifdjceggfcehkbhdhcfhjefdgekeffjgiggjejhjedchigdckjhbgcjjjhbfeefjgecheigbbihifdjhegbjfkjggeddfeckjcjibdkiebfbbcjihbbdbdfidcchicbfgifidbgbgiidhbikfckefcggjdffkkgjkehkcgjehikibjhcdhgdkjikfjebigjddddkbjeihkhhghihhgejbigfheefkkehejegejcfdjddkkidjckcgbcfdbedgedbcbikkhhiedgdfjdbdekdgfkjbicckhffbjdbkekeicdbfckkfibfehekehjbihbikfiejjbgiheggdgfcifbcbjibhfkikbjdgdjchjcbbckjhehkihddkifeehfigcjigchjjfhcdcdfckegjdjkeedbbhhbidicgkgggdggfkbeffdfdkhicbhhjiedhefgecdghjidikfjcikighdedggbhdbdieikijeciccjcekkgfbbbifjegkfhghijfdeiihfeeijdbhjeebghcddkbchcefdjggifccdcjjehcfkijfcddjdkhcjcjgcgeghiebhhcigkbekhighjiickcfkddjijibdefbfeibbjfheiifcfbfdghbifhdjegejekbbkcccgfcffjiiiggbfhdicgcfkefjiccjcbfjckggbbbeegbbigiifhfgfjfdbghchikhdigjhdkiffgkcfgejejccbbjfjibbdcidfikeedehcfkfjckkbedgfjghegeekichekjichkkgggbegbdcbdfdhgfcigfgkeikdhhheicjejegkhjcebhckgbkkhkkkidgciedkccbbkhikdccfifjddifebfigccchhjkgeeceidjcjhhgiedcdbihggfjgcceidjbhhhkghjjdicihfkefgkbdgegjkhehfdechfdhgfgidibghhiffjkckhiiifgeijgjikgejijddkihfecgfjbikikfhjfjkhkkdkchgicjfcfhjdhckbfdbdiccgdfibjgdjfcbihfijhibfejidbfdccfbhckcjhkhjbkgfgkgiejifbjcgjbhdcjjiibddkidbkhfkfkkieeikbdgjjeefeehkbcgkfjfbcdgibbcbkifiekghfiiihkfbeiideiiedgkkfjkjbfcgegjdgkebckhdekgiigjjcdigdehkjfcgfekbhkgchgcfhekkcfdjjgbifkfjkbddeeekebbhhibfifjegfjddhcdkejjdhdiikcdckbkgjfekcihfifdbhcddbjgkibbjdkghgkcdfecihjkhcdedfehfefgieejjbgcfibibcjkjhiefchbgjggffkjcfibhjgiicfbikdhfjidfkfigchegibkhckkkkhidjkkddbghekgbfbekdgkjghcfkgfjfijejccifeiecheifdgidbgejjbjegckggfkecgghcegebidddeecbbjieckjhdfcgffiggbkcckfefhhcehjihidfhecifdihbjddkfejhicdbgjkcbgfjijgcchhkbgckbdkkieefhihgkceccgfbbkjgcjigkhhhfjjbjjfkfhfgeihciigibghfggjfgcgdkhchhiedjkehkicjgfcdedekgjceheekfghdfgegfiigjidjfigfgfdijicbgigfifebgkjbgjhigfjjfjjdiebbbdgdkhkjfigihdcjkkchbiekdgdgdgcbicefccedecfcifkbkhehgjfkefkdeecfgcgibkbbefhhjfcddjfhkiekbddkgikkhhcjhcfidcjbbdfdicificjghhkhjcgjibiehijkijbefegkfbhifckdjjefdjkbiieiijcghbeehehbbkfbdbjfkkcdgebdbjbccbfchidjjdebebgkjgkbhcjcfhjbjkefggdfhfdefechhkhgccedkejdkibbdfccgkjfjhcejhckcjfgghhcggjegfjcjhkbehgicgickehkdjkdgejhcfhgebcjifegcfhbijhghekgedddkhehcjegdikfdjkhkkhbdbdjikeebikegjgkgdkhkjceghjjhicdjdijjbikikcigbffcbgfkejiichdjdjhgdfgccbjhfgeicddjggjbbjdidkjfkcbbhbcjgekgfhifhkegbjgffhkbcbgffgjibbfbjhbceiekdfefkcbbdfihgcekhjdkbkhcjfhhkgfckdjhjdeceiciikffbgjfebgjeggejihjehkffhcigieebkckiihbdgicfecddjedkceibkjijhgfcegfhfebdgeibhheddbecdggcfdifhckkcgfhjkfcgdcchfbihfbheifibgkbjeefbjhbfekckfbfekhhffeekekjjihbegkhfechihhekhifiejiddkbikbfkkffefjkijeffcbkcbcekhjfgehibijjghchidkgbjkgdhdijjcckekecgfibgdkfcbkhjkjgjhhgfgjiigkdehiihbfjfhebbdegcjfhkbghdfhcdkhkfegkjfkceghcfkdcdhijgfigdhkkgdichbfebhbhgbdiidbjjcbgcbbbiggeciefibkcfibdbdefcebjecifebggbhjbjiefiijihjbfedghfeeeefgcgjihjfcehcghcfhkkjgickkhgkffkjihjkgidhidheeeebkgihkdbekcbfdbjfffjibbkjejjhcfhcechikjhgffbjkdbcgikccjeikhjgdfjiikchjfjiihgbkccbkcikhkeddbccfdbieekcjdbibdhkibbkbkjcfbehdegdekfiighkekjfeecbgdebfidkjcefieikfcbckdfkfbdjjkgcccfgdddjbbecfeeehfbijjbbehjcijkjcicfciikjjkkdejehgccjjhjkgifjdiefhjcgehfkfkfjifkkfkkififckgjkdicdfhbbgbikidibibeckhjbkcidffghhdjgcjfkfbekkjecjjkgiecickbcijceihbcbghjhffbcccdgejkfkhkfiekhhikbigkfgcdedihbjfghgjdgfjhbfcjgdhhfigjgbbebkjckjbgkchghfikijdjbbcbjkdegfjcbgdbddfihifekgdfegfekdiiejdgkekjcdjjgfgghccdjkbcghhckfbckkdgicfieceehidgjkeibigibhikjkjcfbdcdeceegjbbfffifiecchbigcdgeghikikdiekiihjbidbjijjjgcekdeckkidkhibkjiikighcggijhhdhbkgffddbjhibggejfjkcihfkdcedbgdgdhbicifbdbgigkfgedehbegedkgihgikkdfdggigjhkfdjjiifkgifchckeiidbbkjhddebdihebfebbhiekggidggcdefbcfjegbiegjdifbgjkeieigghfhekihcihkeibkckchhgdkgjdjbbcccifjdfhicfbhebhdfddeckbehbhdhbcieebkhjhkciheibbkhbiefbfjhgkjfjkhjgfddjdcheiebhkbjkbejgdhifcjicecbbkdfchfgkiejbdgififkcgidjdgbhdhekiffjffedbeehebdgjeifdcbfbhbhhdckibbjkbhkbhkdchkfbihegjfcciccgghbikjfdkhfdbjegcdhehdbkbceceejchgbgccgbiegfbkcghckkbfeghdigdkkbbgiihfiddkbibhjgekcggiefbiijkkehkgcjfcjbjjifcjhkhkkgfifbkjcbfjecckkjccieeehcdijgkbghikbdjdefihkkddiecicbdkdcigdkhibcehgcdjckfhbkbekcebdiccgkfdciejehjkeiehjjjdekjikkchbfebccgjkijgdcjckfijfcffgdijehdfbdfchjjkbheigghhkbkiidfjijigggfejfghikbibdkjcijgidhdgibcjbhcdbgdikicidfcjfgjffifkgbfdjiehhcgbkcjkdhbcdcicfkgefgdhckdeficcjijbckjekhbbdjgdfjdhbdfjdjdfhjigihjeghceecijiechjbbijkefdbbgdgghbejhjkbkcjckicckddceedbigfgbbfgffhjedhgkfijbbdcfhdddcffjkfbgccjbiihjbggijbcdjiddkdejbhdiebdgiekkicbefgkbjejbbkfgdfiicjcihjgecfgkeceefebeehdjbcehfkjeifdbffjhfighjijijfdjhggedkcdjdfeedeijjebfebebchcgifhebkkehgjgccgbidfgdebjegiecgedhgdfgkcjbbebghgefceiidhbehikjhbkddbceehckjbgjjkdcfdegbjfbcdebbiikgkkifjkdbkbifcighbkdjhchikdbdhcdbhjebkjikcedfihickhjfgjjkhbhbejdkbhjgfdkddhgeeiigijjjjbkjhjgjccikkgghgdgickchfhhejejgbbdkfiicfhhfkfjdihdhejkhfkgehjighfcebccjibehikihbcbdccgdhcjgfhgfbbkjbkfbfjjekigejchbjbgcjcbehikficbfddkfikeibddeckfhfdifdhdfifkeggjkidjihgdhjdcddfddgcdgckdcihjkeiggjjeihehdeheffjkibjkbefhijiificjekjjdegiebifchdjkcfegbdjiecigdifcijgeebejfbkbdigdebjigfejbehkijccekgkgjjdhkcfdekejgfbfdidjbkjfhgkkfkdjibkckdgkebkhbcjhfgdidkcfebhekikhfdiiibikdgjbifgdchbjjdbidefkbgghkhkfjdbdghjkchdjhdekcccjdikbfkifgjgjkhkedihkcfhbiiiggdhhbeekefhfghighhgdghkbcddchjfkgcibicejehcjkhkbghjbbciffdggiihgcdikkkjcfcigbbbbkekhkdccedkgdjedfkdfjfjbkicefgiicbghghdejceefckjjejicigjkkdedhbcgeijikkfdghgcgbgigbdkccbiickjkbjkhebfiickigigdgcjihdhfihjfcbbebfhkbhbfggkidggdcdkebdbgkbhkiicbbdkjdgdedhccjfdkkdcgkfckbkcckkcjjkggcijejiicegcdehifcifbdggjjgcihhhfcjgjiciebgjeiifefheejjehfdgfbhjdhhfggeiiijjcbjecddjfckjgckdbbjhdbhbifbeijeefgkcbbhdhifekedefeikkhfhidjcbcikbccjccfhkckbkejbdbgehcheikdiidebhekkihjfjkikjegjcbffebgbidckhbhkkfedcgfibhjjjiegkgghbcfidfifhfhjhbggedhddhgekkfjdkiggiedbghcbjdkkcjjfjcdeekbkgikidciegdffjhehgcjbhjffdifjkjhecjjkjifbejiichkbikhdekcgihgbehkechgcfhhgfcbdhcjbjchkijjhdfgjcfebbdfcfedigjjkhjgchiegkgcfhjeekhcikijegdgdhcfibedbbfckefckgieijedhikbbjdfifbebdbbechhefihfehbhggidkjbbiigedhhbddeiefbbhjidciidhbidihccbibccdkiigdiffgfkbfkbkghcggchgkicbchegdighibeijcecfbfckgehgibhdeidegdbjjccbkceidgcjhdfgcdgehghcijhkkcifjjkjbeejkhhchgbffefehbgdjkehkjedehfcbfcjheccejjgejdceeeedcekefhbdgihjjhkckicbcfiebkdgdfgccjcjdiijkdgbhcfdbbjijgkbeikbdjdcekjgihbekeckkfbbiiecejechbbigddedjhhicddegkcbfgjgfdfcbdbkhbiecjidihbbddjibgbdibhckfbdgigbijidfkddcjbcchgbkckfhfehieeeccckihjgdibgdgihjbfgfechkhhhhgbeegejfbcijjdikgefddeibhcjecfffbicejghkgbfjgkjbgkhdgdhececbihidfgihdkgheefgkeeejbkhgbjbfkjkhifkgcigfhfbcigbkbcefjhfjegddeicihdbhchdfgcbhgckggiejdikddeejbfdekheedgcibgjgidikcecgijbdcchffdjicjkbiigdebbdffgcddkicccdcjgcjggiddfdkgckhhgddeijedfdehgigcicbhgbkcdbcgjffgiciebhbfkkkckhcfkfhhiiffhfdhffbkgdegjbfdbfjdcefgfbjidkcfbkjcfhgfijiicbkgfcccdhghkbihcihgjbdfiifbdkegjfdijdhekjijcddkejiiedijgfihbhkekcddjebjhheefbjfeffcihcbgjhekdbkbdbdbificghkhbcggckjcgfbjbiehgicdkccgdefkdckgfdfegddhgbckbgcekeheccijdkjeigkbbbiecekeiijkdhdbbjcejchdckgkbkidgdeikdbiihehghbbiidfijifjbkiddbgekjgjjbddjddbhidchhdgidcfhbkkgjggekihgicgfefbfbfgfjekckebcjdgcgihcgdcfhgcigfdbhfbbdijfdggcjbijhkjcdekedhbjjghhbcghhfbkeeeefjekijdikgfcbdbdifbfeigcgbegdhjggchjfkhgcbiijhhfbkiccedfkkebecibjibdjeciegcgdifddhdfjjggdgficegbkbecikhkfhdgkhefchcjkjehgjdeeehkbddeddfccbjighgdidhcfkidddfgekgjidffkeefkeekebbbjfdedhcfgebhhhcdhigkikhjkggjehbbbiefhjijfhhdckhbbffbhjjhfiidjdjdehgecickhhckibhkgdcbciceibciggkikkcebkdgdgkkidgfkgdhkihhcdhdggkcfjhhedkgckcckjhcdcgkkcggeihedffbcdghbidkhkhgbfdbgkkbdkdfhefcjfccejjgdghjfkbejgcbikdccidiifhfkediedggicdbciibkkiifgjegjcedejjeichbjjegchffgdfkdhbbgjhcgihjckiehefghgeeedejdjejjhcebhkhbcgdjcdgickchefifecbfdeecgkhedeehkkdcgkbfgkcejfhggddibhgjhedjfcdcchdcgfgcbjijcbkjjcgdkhhbgehkbkjbbdekfcifhkgbejjgehkkchcbdbgcchhbhekffcgdibegfidjkfkfhjffggfcbfekkkjffgdbjkjhdcfjfdbgeegbbccdbkggffjihhgcjigcbijkdcfdddkeiffkicebcijbkdbbifhebkfkeggkdjkekfififcfijjdkjhckciicfggejfdejjbdbeidijcdkieiegdickgcdegfiffbkkibkeebkficicgfdjdigifdddbkgfghiieefjicgjkiecbfhdkcjdegckcjcejckfiekibbdkgcdkcebkgbbbkkggbkidhfhfddhddgceghkijcehbcgijgbhecfjefjjekhheeeffickkjigkekfieikjidhhkcibcgbhffighgjggbfkbkjefgidjfkckiibdjjdddfidikkkggdfkchekjcjbbddhkdikkkhbbbkhhjbhikddgbehkfkebicckfifkgefbedgbcjbdbjegjciefjdbddgffhecgfejhkcjibfdjckkcebjkeijjgcddcebceiibfkhbhkgciigdjfkjfbfjfdeggchjcekddhgbeicchkfkdkbhgbjkgebhhidjchhhgfdidbcigghkhgifbbkihciihbbhhjhhkgbehbcbdheghibfeeefibdecjbfbjgidbifghhiejfdbkhbdeickkfjcdegbfgbkjkbdcgjkgcddiiifhibcihjebjbifcgiifeihehekjhbekejkddbhbfgiifjhjddhkhgghdjdhgdfdkijigfkfdbcfghcddgjikkbhecbfchcfchigfggdeijfehgfjdbieefcjjbjkfhgkecfbikifhhbcfgejjdggehgigfkgcgjefdfffgebfichhcjceijegfbbciiejhhfffgfighbbhkfjcbbhfckefegkckjdegjeieiiecdheehjbcddejecdbkigeejcifeekfgbdbgecgedfeggdjfggeefekdehbjefckdhbbfhkekhjbbfccjefbkdiebiegihiffbkifecegdikcdgbfekfbbcgbdjcdjdecjjkfjgegffcdgbjgedibhjeeehkgbkfbcciggddjchfkkkcjfegkeffjdebfjjfckkifdkfkjkikhgkebbcddfikijhkbefghekhjhbjejgkfkighdkekddcjhjgbejdkhdgeikckifbbiggccbjjkbghhhfdckbhigdkkkjghfhbddhgfccfhiickgkdjhdefkdickggfdgegckkbeghgbcdegkbchjffgfcgdjghhfdkefgehdgdigejbfedbefiijigejjbghdefedbhgbeefjcdfedjjkhgdjefhbgihiifckhgdjbedjidfejdbgggeegjhkhificgfjfhchffhcgejcebikjdhecejbdibfhifbkcheeehbidjikfhfkkidigebiikjigdbkfjgdhkegkgighefccikjdbjbeghkbhkgjfkbjihfbiejibifhkcdfgkikjjfjbcjkkbibcegdfkjkhjdgfbcdcgkkfjggecjbfehhdcfikhgfhgggdgbhdbfiediibbbikkghbcjbicdcbcdcdcibckjbbfgheeicfdfjfcjjbdhgfjgchdhjjdeeffkhkikiggcebfdigkgiehdccifjgdekdekdfjhigfhdgcgbhbgifhgidkceekgffdchddkibkehjcjkhkbcgihhdigjjdgbkcicfbeejhbiegiekhhkdhcbdgigdekheidkcichgbfbfekfjdidcfbkieecfjbhgkfkkdkbfbcibdgkjkjekfbfbeekffccdfjhbjjcbkjjhbecgckidfkjdbggebgdjbkficickekhbjfhdiehijeefihgjeffeegebeifejfhfdebhcjkcdgiecjjgfgjkififchbbkikhkifgifhbdjgcbijibieiiefijjfjjdgcfidkhhjegdegbkhjggkicjigfhffieeicjjfekfhcgjjcfejkhbbgghhfbjkggdghefbhgbeefjgedhebeidcechhefgkbjdgeiikbdfcbjbhdibidkeghkdghechedbbibdicgjkcbkbgeebjgehbdihbijbghfijfjgcghcfjcdgcfegidicigfbcehkicfebkikeckkfdfdedchccegdhgkkfdkdebkfddejgjcfkjeekkfbgfcjfeejdfefidhffhjhdjjgijhbbjceihgdkdigfbifhekjieejegjiehgfgbdgkeicjdijfigkhcgbhjfgeghbjghfjhdibjcbedhdfckikggkibijggjidejcbfgjdghcgcbgjdhbbcebcgkbchjcjekjbgihcbebdkbbgccdficihkgjheiddjkhkffjidcibgfcghhcefjkigghbgkgkeebkkcdjbekhbeekbdhbeifghkgheggejdcieihgbjgjgfejddgbfdbifhhjhehgeibdjfikchkfdfcdjekeckeifbgbgbkkcfkfgcifdfkhdiibddkbhikkfihkbdkbeigkdbfbdeghkgfdhkgjgfhjbbcgjjbfcjeifbdcddgfjfjfiedfggdigdbifegbdhfjbcieiickkegjidjefchhiddggghefbjkghejihifffckdedgdeghkjhhihigcbjchiggkdkejkcbbekgjbbbjbkkfdjjdchcdjhghfjkjegbejcfbkhdcjkecbedhdgekkkhkdbfhbgcbkcihddgfkgdfihdekcjedfhceggffcdijkjfbjdebgebbefcbdijkbccjkhhhihighjhffdfbhdjkgiiicdhibkjbkfkhhifdbhieiddiegbbdbjkfiigieedfjjiecehiefgekcijfjgdkbjkjgiiibhchgkggjikgbkbhegiikhkjickjicfjikhggkkdejggebciiejfbhkkdccffdjkijjkbckbgifdecjikgjefieedcikckgchihijkjcgdcfdddefkfddfigdbiddfcbckiijijkkkggjebifkbjjdchbcfhijefffeeekffghciigccicckfjghbgjbfgbfebjcfcgfbeebcfceecjhjegiibjefbkbkgecejbjeiiiehfbegbfdfckkcdidkgeikcicddbihbdfefkbdggbggjhhiebkkekefcjeikkgkdiikfjfbcekbhjfhdehkkgikkdcjiffhjbcghghekfeecfdgiiigcjfcedffehbjiegecbkiidffjihfdhdkgkddhhccdgeckiigdkikghjdbddggfhhhkffgfijjejidebkfjifedeecffgkdcciikcgihjkkffdjfkbjkhggifggehifhiehgkbfegejhehckdkfgbcchgbkjegcedffigehikkjcfjcbfbcibeeifckgddjhijgjgfbfecigbifhjgjckdbeehjkjdeddggbibdjegbefcbbcbdcedcegdkfehdidedgjebgegjgdgddejkijjghkfdjhdbddjjgiffhgjechjigkdkccjeffdbcchchkgkhghkkjgjijfdbbdcifcgifbkbbedgggckbffedbkhibceckfehgkfkjkdkeeiejidffhedjfffhhjjhfggkfgcgdcdikdgkcgfkekckbbhifjidechdjjfddkddfhfigjckgcigkfkchkfjdifiedgigdeegkideegkhhffeegjdfgkgddheedkdkcfkcggighhkhdjekijjegcfggcjkgiefbhiceedfgbhffejjbkdjdjfbjjhffkjdigecjhjjdfiifedcfbeffgefibgiifiifikjheicikicgjikicidekbcbfgbjgigckedeecbckcjkkeddfehbijidbgebgjdhkkefdkfhkkkdgegjjgeggggdjhhdhbcfidbfkbgkjcigkdeifhhgcjjeikfejhffhkgifibeiedfjhfighefhibkkdjghiidkfgghbeicgfccbgchkijhffbffhciekjgcjddgdfeikdfdccejdgkhjhjiggigfgeekedckkbfdcehdhfcdidebbgcdbihkjfhdkghijhceiehkcbkidkccfkbkfbbdfjdckbhceifebicfdfdjbdhdedebcfdiedkchejkgdedbjgecebjdekjebbjkddgeckjkfgifgdegkcgjfhhfhihjkbbbkegdbcdieffbgbjfdfekjhjdbbbkbkcjhebidcfbdicbfekebffgkgfhekjgbjgdiebdkbgcgbckegibkkfehibifkjbhbjcjcbbeikbhgbdihfgjhhcdkcfhkkjdihhkccjcdfecgdkfggcjchbkfeficfbbffjgeifhdijgebefkkdckhccickiiffficcdcgceiidhhkidcfgedckdebkdcfbfkhhgijdcfcfjeibgijffchicbbijbcjcdebdihdhddiecchfjfidjcjdbiffkhjhhiccdcjbckfidcidiickciiijgbdcfbihiihhddhhidbgjijiiccdcefkjdighhefbdkkjfdikiiefegijfgkcdbdjcjggdeegjggkegkbjdfgbgggfgdbjhbiddbebhfbjffcfeedkhdhdiidfhgfeeiciebbfeifjifhkgcfejkecjegddchbeekbhjfjgiebgfgjcbjehbkihijddkjjbkfiibjhjkbkejdgjhfideekgedbfehchgcehejkfbidhihckcifcidcdefdhdkfkicjgcdjekghcgbhejkkggjdhkkjdegbjkbgfbcgcdjbicjdjjbbkfbkcjhfiecefdefgdgbdbhgjjecbjibhibccffjkbggjibcdjbfdkdkkgdgbececbhidcjjcibfbhhcihccffiikkifiehbjekghegieihdkbckkdgcbgdbikcdigdhiejcfckfbijjhkhfbdhekkkjhkbghfhffdedjbdghekhjcdfdcjgdibeheeigffihdbbckedcedbekhgffcdcgffbjcdgcchjbbiiifdihfbdbehfhdkfjhebbjdbkhjhbggdkbbhdefgjhekibgkekhhefdhdidfbffdjgfbfjgfhddffifjjbbjdcjbhccegkkddfgkkbgeebhfjebdcgejckccjdeekhfhfgigigkegbdhdcehbfebhhffghbdfdbcjgjckdebgigejbdgekdidhgfjgjdjhjkdgcbbjjdjhbfdhcfhcedbbecgeigkgcdhghhecgedecbhgifgbjebejjebjhdffdbehbgehchjijbhhccjkkeeigdbkfdgciehgcbjjggcfffkkhbhgghbcjbfdceehjheihjfhficikehgbibggfedigcjfjcgccfciggjgckekefjgjhhbjcbhdddicjffibhkgghkcedicdkfbgkdgekgfkggkcggjfjjgcfhihcgdckccjkhjbjdeckkdkkcgfgeekjegehddkkeidbjdbckhehkhkjdejddchjfcdgfjhfjjkcgjkbegdekgkkeijhhieibbjbdjcbcffhdjgibdgeiffjifkfbbihcibgeedeffdgbehkegbgbcdkjhfhfcbfjkhffjfcbgikigbhfbjeihdbjbhjgkidkkkcekcedefbbbgdfbekcjfejjdhccbddddfgkbiijedigdijichkjgfbggijdidjfbbbhjckkchgjfbbkkdhckjkgfdgfidkbkddkkjkhecfhdkbdhehhkfcedbijbegeecjckhkbdhjgbjjehigcjjjecibffcdikbcdddkgdjicfjdgehhbdegbhfcdgidcffbjiddhjffbbfkfkhhfdhgdfjkdgdddgcbfcdekiekdjhjjfbkgkccbhbgkdfjdijbebfhdeiddkcihchehghgicikckfhfjkdkkgiddhfkggfekcidhjehiejhkhejgefdjbdhffgfgijhgkgfckkccbidkifgibgfgifhefbjhcbefijhgdgfhigejeddgkjgegffhhdcffkikjkifidjhjkgiifhghbkfegbcgbigfjdckhdkbeehfcdcjijjbcejkdigkgckiebikihjghiffhffkibgghkcjbkijifgjeeikhkfegfdgkdbkeccebbdifgbididfhidgbcfffjdfdcgbijkdkfikdhkkhkhdgfhkddhfgiffkkkjhcejkbdchgdfjefbffgeeciekhbeehfjedfjkibbfijdbfihhhcjgfkhjikegkgbkjebjbchhheeejbekeheihecdchghhcghbfkecjgdeicedgeedcgkbehgdbkfkjgkgigbfkfhjicfjkjihkebgbfckejhgckhgefhjihibgfbejcecdgegkddcighghjeieijbceheedjhikbkighkkckjiiecgjejcibebbkfegdddiiijieieijifegjcjihehbbjjfdhgkdkkfgkcdkcfbdcghddhhckecdhbdfhchhdcfdgidijiikhkfgccbfdjkcgeekcbfibejbdckjjhfibkiiijeckkkfcghhccieggcjigekdiccdhedikefjcifidggjkifhbjcigcbbifjjijikkcegefkkchkiifhehgkccbiggehigfeiiefdhhbdgdihkejgefdibkhfhehegkhhkcjdicjfefjhcjefbeciheccggccgdbbjkidheeeighbbfhfeeibfdbjbccjdbediedghhkhihcbicidibgccfidkgfjddhihiggdgjedbcbekdjkjdjkjehgegegkgfjiggbchkkikccffchkdgibfghdfcbhjhjbggkfjhgejjkcdckjijfeiffhihdcehkcbhbgikkkjebbebjehgkfbeiehedchgejjccbdgbfejkgjceddkcfkickejjcickceihfggjedehbckhkgfjbccjjkgibkedbgdgfehhidkibfhgdgecfdifdfkgkcfdbgbfjhihcehgdbbgdbidkhdkghgfchhdidigedigkekbhgjegcffhehbdkcgkjdhkgfeiebbbcgfbjkkbgefbhdekgjhcgbckfhhfhhbkhkfchkhbfeeiebjihedghfgdjdecjgbkbcciifeheijkebkfbkhhdchgdekdibghfgfbjfddhhhhfkffhkdcgbjgcfjdehbbckdgkbbjecghgcbibcicgkbcfddfedcdidccdhjdkjibkhfbdckcdehicikdbibdbcjhikfheeigehiheifbdighbggjiefbbkdkbehfjeibhchbgkgdjefcdbgfihkejjfbhfeeckfeegciibbdgkgjkbibcdjeefdiegceeijhjediekfhbcgikifgcfigiikikghfegbijckhfdbhiiciigcjgigfefcdedbfgfbfbgkdikjbidhckcjeecbkfikdckgfedjeedkidhbechcghigkkdhkifhdfekfhcedhihkghhbhjebcdhikbeeifdhidggdkkfjbgehbfiibdicgccfggffgbeibfgdjfhbibdfcjdhghfbfcjjfhcckkbfhfefdkibbehkbgcchjkjefjdekkkfigjeiebkiffghhjkkkefjdfjijfkghgfccdijdjiiekbgjjdfdddfikhbebiccdjeidcfckfcgikhkhcdjbhibgjjdcjieifjhhjbkkffbiecjciiiifjihcjcihbfcegfjbcdgfkdcdihcbhgjdjkeibdjkcdehhibhgdfiieihfdjgjjcdhhdibbefdiekgihdfbekbkcgjfjejjefkhgikcdkgdieieegheghggjkhidciijgjdkhkifkihibfieikjkiibhedifbfbhgficbcdcgfejjckkeecjidkhkijiifkcheicdehbkggehdbedegbckjbiefcjdhjbbibcbjdcijkgjfgjcckehgkhcbfbckghkkibdgijhfkidceicchkbgkkdchjfhecfdhfkcgbjkcjckeddcbdcbbdffdjkkcibbhchdhhiehjghceiiccifdhjjdfhkijgigchcbfjedidjdjbeiichcbikghhhcbbkkcgedgkegkfekdjcdcfiecbefkbebbbicdjdeijjiicdckegdhhddbbbbjfhhjidhigeijggbbbghbdicekcfjcgbhfbfcheejbfhjegehcibjdcehgghckdjikgchfgjchjkiebijkccbebhdhfkgfjbhfbekhbhffffiigdfhigbdfkgcebkdfhbhibebdfjdhhieicgeecbbgkddeikgjbjfgkfekifgdiidhcdfejcejehfggfdefbhhhjbgfkihcbhfgeehfkjbjhfgdjhchkekkgkihbbcgbfekefghhbckkkjhefjhcigdgbjhikdjihjfhdfhbgekcjbjeejccckkdfcdchkcihefiejccjfjhjffbgjehcifgjkecffbfgkbdeebikgjcbcbcjdidkhehffkgbdcedeeigedjfkjhkgkjcgbcgjkkcihghcehhcijkdiehfhibddiciigifbdfbfekeekiikbdccfkckdhfcgdkieeiikdiihkjcichbhifjdefbjjejeghdkekbjjjebhdfcbcfbdkcihkjhecdiedieedkejjehhfjefiekchfghhhbdbfjdejkdebfcgdikkkcbbfieegbbdhdehjcgdiekjijifjhfjeghcgegdejjgbbibkkjgggkjefgidfgfikcbkihkibefejddddfdjhgbfgkehbkgbhdckbfbkkfbicgfjkjgcdbcjkjkfifhffcddkffhfdccefjbcecbkefjhgicbkijfeihckcfgcjbbejgjjdjijgigjgfhigehicgkddjcdhdibecdjdbkjbgjhcgdcdhgiefekibjhidkdijiihefejdjkjefcggcekighfdgbcjjdebicdefgigjdiceebhjjggbijfbgggkhkbccfdikcdfjjjddkhcfijkhedjdfdibggfdefebghdheejbkhjjjfbdcdihhkekgkcdkbbcfgbkfecigeghiehcbibcicbbehchhbjghcebfbkgdeekedfcbbiieddgbikcdjhdfcibhgehgcjdcihfiifhcedbbjdidibfgegfficcbebkegceedjbibgcjbbheiffkkgbjjicjhkcgeebbjcddekecifefkiidhggjedhkgbjcikdfckifgdibcgcjjkhejkiegihgejjekfhbchbdhehfkgfgchcgdcjcjidibjkekggejbkkekgjkcebbjefjkcdedfcdceeffjjieegedkfkjjeiebihgffhdddegkgkjkkbggdbgfjbdijedjfbdfkickieigecekikcekbccjeddfieihefbfcdjchcbebjjjfkkdgihjehfeedidfgccfikfbcckdhedbbkiegcfhikheidgdbhbjihcdbejjfkccfjieeccfbdfdhddjhdfbebhjkfgbedejcijkfbjiheegjjhigejcefekikbeibhbkibkbgikdeiceghbbifjhddbhjhjbdfihebbidffgifebjdecbjhegjdhbkkbjchbkekjdiedbdcjfckejdjhhgkkchdhjbgdckgebcjjdcddekiiifcbgbfgkbbhccdgbbdkeedbhhgbgceekhkidbjeghgjfghgcdjkeciciehjdjgeikhhjeifegefhgfckdhhjidheeedbdhcgejfffhckbdffihhjcejejbiifdhkkeghdfdbhkddfdhdijckcfjbkijffeegjicbkihghfeedfkdficdghdbceigiiiiccjddjgiefhiicjjcjhfdejcghfijcechgjkffbcdjigbbidchkgdbjkgdddikkeecfgjicgejbbikibkebhibbdcjiggfjiibgfbfjcciikkibiecfgkbfcbeefkedhkeeddkhfjjhfigkfghhkgccefhfihkjkhhdjfjhebjckjjcfeiiebhiiifbcbdfjcbbiekkkcdiiihjdjfhkecffckbbhjffbjiikdfkfebffcgejhhgceifdejebhjfbbefkjgfcjfggkjkgcjhfebibieegdfdbdihgkgfbhhihjejdbcjeeebefbkgkbgjhehgcgfjghbjbbkjhhhbihcghbjebfgjgjdbefhdfgfefdfjikchcjkjgejfifebjjhhbeiceihgfcgdejkkbbiigkhcbffffkfkgbiiegjgfkcgchigbedfgdbdcechjecedkfddgckkkcdjdgiiebcgjfghgbecdkefcicbjcfekfbehcjeebegjhjhdfjjdgbjdggcfidifhbfihjbjjjedhkgbfgddfbeckhigjbbehdicfdckegfbeejchkjegbkfhedkdbbjkfkfbgdeihfefgbgbfddibgbbihgdbjfecidjgcikebkccihkddffedeehdffhkhkgfkcddkcgjbfjefbgbdjgddfgefgcbhiejhbiekkhkefhkjeieffcdchbfhegddkkeekkeghfiheddffcbejgkihhjkedchcbidechfhccegicfgddfhfcjefkhhgbigcibihkjgekbifhkkgkdikdggiidbebhjckhigbdkchbgecbjbjfejffciifkkcgdgeckkidieejegdiggijjkkiibbdfhdekcbdfhffjkhbikkgdjbbfihjffgkgbijhdiffegjkhhfcjbfkeicfkkcjgjcbjbdibcgbfjddedeffiechdeijjcjjiddgjebikchhhgjdkcbgbkbcekbkfhffdehbdcfkeidjehfgibhbikkcdifhfdgkgbkckfgdchcejiiekkicehckbgbfgjbedidgebjdiigdcfejgkdhjbdficihgkiedigggefhdjgcfihfjigiejhedgbcdcfbihfhdkjckkjcgdihcigiddgbejhgcjfehkgjcgdifikcfihigiigfbhgkfbgfjbcjkgfddkfkbkgbijhekjhchjjdckehkbicfceghgbigcfichechfhbjhjckjhcdkcjiiefdhbhkkeejgfgjkbgjkghgccdihbkfhkiihiickiffkkgbikijbcjgeghfhhckjjjjbbgkgiecbckfdghckkbecegkchkbcbciggfdhcjeihbgdcdhhdbfkdefhcijfhjfdhecgfbibdfifjkjceehibdedkjbkegefjjdeeicjkgiikhchdfbdeefekkighdgbfjiebdkjekkfghcicefkgichbghbkkjdkkficbbfgbibjdcifkcjdggfifgfgiehecieifhjcffhgjheicdccjehdgciicgehikicfdikjehgdeckebbjkhkkjdegdbfiehiijideidfcjhiigggidbdjikbhejddjdcbbhggijiffchijfejhchhejekbcidkkjcjcgecjehgdechdjjeicgbiggeekcbhdcffkdhjfhfefdehgibhghhjekcfbcidkihbjegidcfgbgjbbjhjigffidfhbkbefkbefbdkdeibjgkcfkibdgdhbhgdbdhcehdcehchkeeckbhjbciieefeicihkieegegkjdigiffgibeegbcbccijkfhkiccdgfihcfkdkdbgcbcchjefcijkfcidkgbedkgeghjdegiifgiidjbheibjdiiekcidffhefgjhghhbhikbeibigebdedcbgiigkhhejgjkgifgedhgdkjjgbhjihebhihgdfhfidfefhdbdjechbjbhedbhegckifjfbfkfkfgkddfgbgdkhhgcffgijkgdechicjkcgddijbbdjhghjkchkhdgcdebhbbgfbhkfbekfgijcbgihhceijcejgkhdcjdefcdgfecgchgfieidcfbicggikjbiddbdckfbgebkcikkcdghfbjdddcbbiiijijchkidjgjdjbiiidihhcbbefgjibjhiccbedgbjikcijecbgbjfkbkcdjjbbggefededcbeegcfdbfjkbkbjegfffedcjhifkcjfjikgdbhcfcckddfdcfgcfeghhgbciifeckkedhgkkffdbgjhbedebibjckbdkcegdhhedbgicbefchhdgdkdfihfcieijhehfidehkehhcgbihbkceeckbbfdhbdckgdekjcdihcicdidfccbbcdhhkkehkhgfjhddgicgifbhbjggbjdgeidjeccgkcggcfdfdkgdcfkhhddhifijbhegcbfbgdikbkbhjhdcjfjjeddeicjfjbfjibhdkkffjcejghbghdgidcjhghdjchgehjhdigdjbgfgcbfejjicbhjjcecekbigbiiiidiedfkccjiecgjjghkckdijefibfhjbgdejddddjidbccfdhigjbgcfihgkkdjdkcegeijehddhcjcdkicjejfgckcjjkbdideikbbiddkecdfikhccdgiddjdcekgidejbgkgdgckhgieccfcjibggkbkfkkfcfkjhgjfijfhihikikejfibddfkddgjdfkecddbgiigghkbijidjjjgjkciedijhdidihghhcjfdifkeeggegdffjigcibikhefbkkikeifidgffheefffecbidhccffdebfgdkhekgkfbjggjekghibdegjedbkbgheecegfcidffkbdffedbjgifkgccbhcfigfecfccbfkjgedchfickgkgdfbbicbfjjfebdcfjekjehckcfbcdbigdhhfehejihhefhfcjkhbbbhhcebefihjgckkcihfekjcgjjgkgjdficihggijjjgfeicjdhcjkdifkdcjjfhhfdkdidgebhbbiggghjdjgjihkgdkfcfjjdkbbekhchchjdfjcfjdcbhkjdjkkfbhikckgddhibehbeigekhfhjiekcedijbjjckkhifeebhjfbhhhhhhehbdhdkjcdjedgjejbegbbfdjejeffjihkdekhggidccgbcbgggejhggbgfbjbegejhcbkcebjfkjdjbkfeicchhfebeegcjcbibeeddegbghckicccgcheejeggbeidecffcjegjkcgegdjdebkdjdffcdeebffcebjcfbgikhfibkdedcfgebkhgkkbghdkckkkiidkchfjjeekjgdbkbkbfijbdjkcidbeiejhjjejbhkkgjbhcibehcikchgejffhkgkbiddfbigjdejdgdkgjjcgcbdkkcejihbfifhcfhhbjgkbcggefhbhebekcigkjckggheddfffidjkhbibfikgbhicegficikiidfkfdfcjjgijiiichfkbcjgcigedjcgeefchefkhkijcjkcghfjbgegkcejeficfbfekfdejhkgchjhckdkkjcbgdjggkbbbedbbcfbhgkhhbkjhhjgdjdieceddfbfecfiiifhiekcjhhfgkdgjkbkkcdjcjihjkhkjdegfiedbbjdehekgifcekcfhgiikfedkgjeheieghdggcbhbdbcjdgdbjiiihkdkeciheehjjdbfcdbcifjefbkgedidcjiihgjgdbgeceggghfdbdhiiidcikefdikdkjccccdjgcikgdbfjdcfbfejefijgfdeekggeggfccfdijegkhiccheggckfchkdbgeekhfjiggbkkedjfggjieeddikkjffbkkieejkckeebhjkkfhfkgghjejhhkjhhiefdehecgjkcdbidibchddihhhcjifiiijfhjfehhbkffbjfjjgjgdjhgehehhfhgijbcfjkcekcffgiidickbbhhfdfbhehkjhieggkkiidkkjibiifgkdcfiikdhhjjbdccjigbjjifcdfkgkkefgjjdidfibdhhghdgbikegkjfkkkjiidhggebekcckgigjdkkcfecfhfbdjfjfdgeidfihjfkhhdihjbjbekccdfeeijgdbddhckhjdijcjgihffcicfgicfkfekkjieggkcekeieihgihhbhikfccgdgbcifkkdbjkjbbedfjedgkkfcgjckdgcdgfjdggdckbcdbbefbfegkcchhjghjcidghbkiihkbiecjegjdjhfigecgkidcfhkbigbjbdeighgdfifdefbcfffgkhdiibhfeiicbdfgkdgbejgjghhhgfdjefdddefjkcekjbbbbjbccfgiiejjfdibcjikgejbidhccciicigheecgigkcjbhdjhciekkckkdgfhgggigcgkjhebbbhkbffhhcgfgedkfdcfgjckcejieifdejehgcdkijddfkdbegghbkkkjjiegchjfhhkdbhjfjedbhdiieghekifhdejdjgbkhdejiehgbikkibgjkdgdhdedibhifhbkeckejbjfdbchecjjjbkiihbhebgggedkhkkbbcibccichbhbkjhjjbgdfcfbdgkidhgcffifbkjihjgedefeijghefigecgchhgbkgbfkifccikkibhiedigfbdbdcdhjkgeekfekdhdiejgjbefkgjehdchkikgiegbkchbcejccgfdcfkjhhkgdjfkdfbfbdcjbkfdbkhgjikccghhfcigkgedhbihkebggecddbfhhdhjejhhibgjeedhihfhcijefbkfcghdgbefkgehdkfekigkigdgfhjjdcdekcgfiedefjbhfigbhbejkcibihdbjehkfcffjeeehhgcjdkkcdbcdhefgkcffcfbihhheficcgchkhiedbbdkhbgbdhiiefjdebhgifcbbgdhhiddcfjegcekkbhcgeigigjfhgifedijggkbhhbijkiiiecbfkbibfjhcifhkekfbgeicgffhikfhhdkfhgdbjddiigjkkhjhgfcehijhbkgjjfgjjiefgdcddfecijbebddfffkjdgdbbbidfbkfjhkihccckgkkbjbhidcghdbhjjhfcgihhbfbibdfjkkjhjhcjjdbebeibkjfkcbejfhcfeddbbhkkkchfddiehedigbjckhkiegeideikgbdidjekhkihijhjhjcgckbebkbgdkefccedefgbjeeeegkdgfhhidjiccbghbdcfibecekjhbeifdekbhjjghhhbiccijiidkjcigejickegdgkbfjgejihgckkbbjdbbjgkighbdkjebejbbegfdejdfddjejfjbbkejcehiihfhheghccjhgdkijekeijiebbifdjjikkgcdecigfcfchbkehkjhchhjbeefjfdhcjgfcbfkbifjfbdbfkjihfefjhjhkjjfhhggfekhdigbbfghbdfccjhkghhbkcjdbfgjdfgbcjbfhbehigbkdiffdgjfcdbifhbjfcccebfbccccgbdcjchkbicgfgkhgebbkibfidkhejjekjekggheeedjfdgdcjfcgeiggfidiefdfbgjgjbechfkjjfeejgeedfgefgbhkbhehikcjghhfkchcigffkddjehgidechgfcgebcgebeibcgfeiefihdeebkdgieihkhhhjjhcecbjkdfcckfcgjihjkkcfdbckbcjjigcgcddgjcbdhgcdfkbdikjidchccehfkfcdkgejdkbegjhhcjbejjbbejhhbffjhhicdiedkijihcdkhfgiickcjdidedkccbcbgjcfgdhgekgdkhfhdkekdgjibcdegekdgifkcekhbhgbecjkhjdbjjggigjhbfkeiikcbfdfikgcgigjckhkjkhbijkgddbbhbdhdiedekhbijegggddgjdgkjhiehiiddehefkgegeejcibikkhbdhggjceijekehicbbicjgkdkccffbfjfjhkjjkjckdfbdebfhgdfjfjjhhhecgkbikjifhbicdbddddfjejgkkhcddbcdbhcbcicggcfjfhdiekefdidhcdgdkjgciecdhefkefgdhibdkbhcdbgefchjjejjddjjiebbgdkgkijhgjgibhbhkbidfebidkkfjjgkkfcjkdbgcehcbffkghhcebgikjeieddhjbejhjffdedkcejbkjkeddkdfkecicdbidhgjcbichckggfiiifeefkjfijgbcdhjfcckjdbjgbicbghkechhkiikghjdikhgicdgkjddgfkfideeibiggegejjcffjiiigbbgibcdhhgggbbkkgidkjbbcikjhikcjfikckcbdhiiibcjgiefgidfbihjicceibgekbdeighigcgfcceiedjkfjjcdbehhkijbkgikdjcjejjggikiiihdjdefhdbfgfgfdfccgcifdddkhgjkgjdfdfeihekeebbehicfbdiiefejigjddcifcekbcekgekgbbiiidbhedijckdicggiieihchcghbfeehgbbgdbbegfebiebkdddgcdbcgdcgcchfegefhdjhghcfchgfejihffgggiejbcfefgjjgcigdjekecefkeckdffidfjdfkfbddcbchifdiddbfkcifjiedikgkgdhdbgcfdcebddbffeigkccdhbiicddiejdkkdhdighigkfgedhhjidhgegfdeigdhjecdjffbkfgfdkhjcfikhdgbifkhgdbbgkcffcccddkhbhkkgefifbkfjjbihcbggigbfkjcdgbkkfidhijcjgcchdjkeiikgkgjicigedejieddkibcbfkfidbjeefjebicihkkfkchdbedcjkbgiiidjbgbdejbkdcjkfechfjkcgkkibjdkcjfbhejfjbbjeghjfdjchjkkbebkghceedkhbkkjgcckgkegkfigdcedfejefdjckiibdhjfgbdkekjgbcjdkjijbdiejhgggeggfgjchfjjbgkkbchdigdbdggbibdfgfddegdhfcegebibccjgekgibhcceijddidheecfkkbfhbceejhkcbhgedfdcjikechibegdfhfbdgcchhfihfgejehcjcgdkbkcccihgdccfbehigfjhbedcbcfgbifgbhfhfhekjghfddchkchhigicbgccbdcdbdbiggfjcjigedjkciifigjdkkkggfegdkhkjijdfgbjjhjbiejkbjicfkkfegjdhddebfgedbgbjgkiekfdfeikkbiejjjjgfcjgfceekgfhcdejhebickfciifkbjbkkdcjghkbdcdjebdbdjgbjgcghkeebcfjeceijfideibgkfhjkdechiiddhibfiebggbicjcfgghidjjcjjijbdghejijbicbihggkecfedibhckedbdgidgkghdkhkjedghbgfdccfccjejgcbekejcijgdfjjegkhifcggbbigekgdgdjjjeeehbehekfdkigbbedifddigjfkcdchecefeeefgijfekiifbciehcfgjcehgccjjeckbdgjcbkihieifbehjdjfkfbehidicfddgjgegghdbkbcickgcgikhdcddfbehdcfghhcdddddhgfikjgckfgkibkbikckcfdffhjdcfifhcjdgjeeecfhicihchhgfbjkccefebeffcekhkkbjkbbeddfiehebcibghefjiihfcibiehjbbhhgdjhhhifehkcihjfckbdihjeddhjiehcijcdigdiidebegckckbhhdkdehfbefkbbejffbjgikbbfgdbgjgjkjkkjeikdeibjgidfccigefkjhckbijdhdjcgjfgifhkifgefbkfcjidicjegghiefiiidefhkckbedbgbfhichikgffdjgkckkcggfhhecfkgjgehkhkffgkkjfedhcfdhdbfgicgeckgigcedehiggffdjgheibkgfhdgjhikijeiddjdiibcdbgbdcfkkffjbbigickhkicfbddbedkbhjhecdbfidehjdbhdekfbhdfkececfbdjjbjecdfjikidkgcecjgcdgidjkgdbeigjekdefhheedbeciibcghjikdfhfkckcgjedhickhhjhkchffbgfhbjdhgfkicccgfekjigddcdgcfeiieeckkfcdjfgejckhikhcihchbkjgbjkbfjbgdddejcccbdgecjjkkjbhifjkdjkcgbjegfcbcijbddfdgjjeiggbcdgbghdhkjdigbjdjbhdbibchffifdkjbijkhdiiebeiddcfbkjdfkfibeehcjefehibcgibkjecefcjecikddgbbggdkeiibiedgckjjegggfibegjgbihjkhbgjhkhccbdikegjjjchdkjkbefhbhbhcjegdhckhhhjdcihdjkhhdkekfejfjcfdkedjdbkebdhcbkeehkeihkiidjfgdekgkgjjbhcdfbcifhjidedjhgedebdhckkjjbgchefjekcehehehjbkihhdjikjbcchddcidhijcicbkegckhjhibieechkgeefegggikdhhehbbfehdkghjdhdefeicfgbigefigefdjhfckbhfifiekbdkcfkjfffcfikbhebihdkgifidkeddgjibdchkckiigkcffkdjjgdcefdcbcceeeieihiffhebfkjcgiejbkcgfkdhghkhccdghdceedjdfckcfjkhhieghhcjeekdceeckkgifgjkjgeeeibkbbgkidhegffbjjgjjkijkecggdihkfbbhckfigfcbighbhhhkfbdkibjhbfiffbfhcbgjhebdhiihhffkicibgjcjjikkekfgcfidcbijbhjjdikcebbfcijfkhejdejdjbhffiiefidejehjbcbbehdkhfkgjkjdfhkjcfbbefjhjdfieiceebkigijggkgehhibedjfchbckhdecdddedjbcbfggkfkegjjcbbkkiiibjfjgijfkdjiedhjejhgcbcdkceekffdcdfbfhggjikhbhkkbfjjibcbehkdjhbhdcfegjiifhgcdbcbgkdfchijfdkdbjfgiehedcebhcgiedehjdkbidiijdhjcbehjbgdbjbdihfdegddffdeigjhbjgfkkikedbcdcgkkfgdekkbgjdcbjccjgiccebjjjdkhgjkkkhgdbhhdjeheehdbkbgefcdfcjggkggjikgbggkhbkkfbidcggiiiigfdeigcfkieieefefiejhekhhddedheiebgbggjgggkgkegdkebhgdkhhchfdiekhciibbijjhigkkjdfjhcjjkdcdebikdbcejibbjgbjjcfkhjdgkcdeecjkchbbiccdcehjgkiddibibibficfjeeefkbcfbgddfijihjbbdjgfbhbbdgcgkdjhfbfgifhbgcjihfdehdgkhfkchgghecjkcbbdgikffefjhkhdbbbcbdjgekkbbhgkccjfhkihjdidbjhijggdhjjheiejeehccidcfbjkbbejbigibbkkjdkekbfjhefgibdjidbkjgjhhfheibfgjhgfiieekjkdbhgkfcegjjikjecgcfdbibgccdcehhiecckggdhikbgkjhfkeichchgjkfbkifedddcgfiffhdgkdghffdifceddejjhkdfgbfbbkhgghjheiffkhbbkgjjifbgkfbiikfkegdbigbfhjdkjeckdcffkddcjceedbecfjhikibidkchikgdbcccfjhjihjgkgihjghefdieifjhbjchijjefecdjbbkbjkkcccbgidfjggggeijigdfkhfgcjibgehfkhfihdfcjggdfeefcdgigchdbffdijeckbkhbbchhihkcifegijhikggcgbjgbjihfjbjkkkbgjjhieheicjjhkbheggfhjbhhfgjijkcfgdchhbkjchbekhjkdgiccchibjbfcgjhkkfgbgkejkijhkcdjbegbhhbbfbjiidjddfjiiikijdififcbdgejdhcjjjdhbdfcdhejegkkjikihfdibiheicieebjkcfjedjcchekejihedbhbkhdkiifgedikbhheejchfdicfcfjjidkgbdhddjhjdcejkjgcbjbbijfhgbjkhjdkfgbkbgdhdhhfgbiekhjcfhdgebddddheigkdjkghfcjegdjgfjgkfgbfidkjebejfggekiidkchchicibkbbbhebejkbikibecjdbgffjcfefcijibbkddikkjjffggieejhcbbifjicicjdgkeghgcgcfcdccefikkhcbdbifkfjhhjeggejhjhcibdhkidbcieckbgbbigdjkfedfbbgikdkigbkedkhdihbdkbijfcfekfbideihdhbbkdkkhfhbkckfeijbbgfkiikegdhfiebbegffejdhgkkijfbegdgfffdjicfhgkcbjbikfcjdhgeikjgjjgkkiikcggkhkjdciiikhgfjjjfikckcibdidjeeeegdfefgbcjgjfchckgibkfkkdcifffekhdhdbkibjjijigecfdchgeehjhidigjecbckhcbijjgdfhfdkjdejkbgbfdbhhffififgjkgkikgiejkbiefdbfjbcchchicbcjdfdebcgkkfbekigghdheebedhbcideibefdiibjcfffkfddciiffjgedecbjfddfjkcdhfgjicbkbijcdedkdfhdfkidjjgkbdghkdgjjhjjhiebdeihijbejkhbicjhkjeecgehkehbhhihicgkcgigggcidhfehfgidihbggdikcgkckkeehgjhfhfedccjcgcehheekgcidhhcjijkifcecijddjihbhcecghddkbdhbjbgeeedggikbejcjffdibfhhckiggbfgifkegkihckieeiijhicgjkdijkdccikgceidifcjjgbciiihfkddcjfihehkiibbgebkbckhjhdkkjjekjkecedkkjkhejfghfkciiigifjgjghcijghfcgfcgkchfffegbbkeigjbhegdfdjdggddcghhfbikfhfechifijeiebfigcdcikkhbghbjghkdegkicjhkdgcedjhdbbgcbgffggjjkhfedjjkkfdbfccjkcdcgehjbjghijededkeejbjkbhecfbiijegiijdbkgfcghdbjhicheifggccdihgdejekhjhjcjfgcdckhcddjgekgjbdghdikbfiedeideijkijegiejieggbgechgckdeiifcgibkdkebcbkhkkbhfifjiffkjebfdeehjcbkebhkkibchbcddhejkbjcdbdbhidbcfhdiebjcdbdififbcdebckfkhekbccefcdikgfkkhhdhkhbhjhhdhgcihgbgjjhkjcdbgedgddcbebjjgdkicdgjjfgfbgfkikjkfbdidiickgfjcjhbfhidiiegebfhbebegeggdhcefffigciiegcfcjgiibjcdjkhjfcbihjgdkhheiijkcjjbbjeedbbgcijbeehedfdbejikfcighccgcickddjgbikjjfjkhjbhdgfkdgbgidbedebebhkfkibbfcdgfhbfkgbjkjccichfbggbcdfdhghgjhfbccbgediijjeghijhhkkfjbhhffgidfbcfedgcbcidiccbfbidfjkhebeicjickcebgikbjciddebcjcjjicbgjdibiidfhfhkhjbdeeifhjbffkhgffgbfcfifekkdcfikcfejgffjfbgdddkbkfghiefgkhdjbfehhdbffdhhjcjibghcbhcighhikdiecjjbbbeikegkkkheigeiiikkekbgcejkgfhkggjidfedkbdddcgdhcfdfgbejefgiekfhfdfjehgbjeebhccicdfcedcjfggbgjgdedjffgjhhfdgbiikijdkjhjejchdgeejdcgkbijgijffbijigfkfjjbfehkbhbgbdeffdcigdcjdffiikffggkkiffjgdjfcecdkjegbfbdkkebdifbeigiccgeebikefkhedjjeigjdbfeefffcehebhhjgkbjbfibdkedfkjkdffbheejbgdefihghhhbdidffikhihhgkcefjfkfefedgbjfijhjhddcccebkfbebkjfdjbhhjcjbjhckkhfbbiidkddbccihjfjbbdbedkbgkgbhibhidkfggekjeecdhbchekbgbdhffcgkdhdcfcgfifkfgkjbegecckdhggideebfhidfkjfbcbbgckecgkdejihgghcijgkfkgedkfdcffhgichffcijfcgjgfgecickeckdjgfihgjcjckieeifkdcbjkebjbiehdhgjdefijjceiejkejkijfgbekkeeeggekdefcbebffkihgicbhighkjhkjfkjfkbekgbjekkfijfjhejgkekfhjkiifgjghhgcicjfgdcfikiejjcidchdciejkifeebhjiegfghkgecfkgccjiffgdffiibihbfgjjeicehbhgdgcbkecdkebgifkkdkkccciigbickekkbehfgdjigbgehkecdiffcbhhjgdgibdgbcdbkidkbkciicjihjhjbbfkjheiffhjjgieeikjeiiiehgbddjfiidjijfbfcigefjckehkeigdjfejghbekkfeihhgeddbfgcdhdidjkcbfdibbbgcghhcjgkgecdhficiehkbjgbggikbijikcdkbceebidbbfchbkfhgeekhgbkfgcckckbcgjfigdhjfbidhhddiejcckedgicbhbkbgdikdkiekhgjhecibjifbhhkchiehefecfcgihefghgkkgcdbkdhbjkeiikgjjkjehbdfdfjjhbcgjfebcghbegjjebdjickcicgdjfehhjbfddidecjkihdedbihbkhfffejkkdjdiebkigddhkcjefjcbhgghdikfgheefchiegckkgbdfhcjdehcciiggfkjgbdhdigbjbebijifddfhfifehkiejkbdcefhkdcfeciidhkbhdedfckcbcjdifhkijbffjeidifkdjchbfihgcjdjebcijbjhfffbhjjhcgbcdhhhgkchefckecdbedjcjhbgejdddhhhkkgbbehbbfdgdfjjdfbeddijigdejchbkbdjbgbcgjffcgbiiekhbcieebjcdkdhcfjgcedfcbeghhbfbfjfeegefegijfiehehbfghhegkikfgfhicddkbcjedjjgcehccgdfcfggikkhkgfdifibbiefgjdeehhdbffeefecbcfbikhdikgfhdhdefbkjhfhhgdfjehikecdkdjefffiigkgiefdefhbihehggfhbekjfdgdbgikgicidcgkigdgdgjkeehcbdjbgjgkegjchifkikjkgkkfdbccechfeeidekdcidkjihjhjjckefbfeihgkbbfeeecjjbdfeeecfhekdidjkdkedcikbkihjegkhibbcdkkicicjhcdhcbgbbiigjfdcjchbgcfkcdedghfjeccibjfihdidhcggcfjjchkcibgehkcefcbfkfidbkkigkfdhjdjjfffcfekcjgehfgkgdhhikebkbicbieiebkdbjcdhdhgfjhkgiejfikbidbkbffbffkfjckkjeffickfhgijikecdkfehhjghkkfgdhdhjbcchegdbcehkfdgediikkfdckiibfigbjbibbkghgkbdcffgchkjgifbhdkgfbkchihgbheigcfcebhdebcddficcccjhjghbhikdbiekcgdghgejffghbdjffddkjhbebjheebjckdkgkbigkkjgggeedgbkjeiegbfhdfckfkghjiieehhhcihhgcjggihddkifhkkfhhecgiegdefeigiehehhijcedjiiejcffcigkgbfgcbbfkhgfcdecgdcjehfbfgedifkefiiggdcggbbijhgeckhghcgbjcdggehgebjfhkfggcjeddkdedfbkggkiggidehigfebcgjhdikggghhiffcghekjedkgghggheiefjgebjjbhkbgikhfhdiigedeekigfjdgbkeigjjejejkejkhejfekkciidfcdecdbgbdggidfehhjgkjdjbekefjcbjdfdhhhkbehecbkkhfcfehecgckfifgjbjebkhhkijcekjbdkkcgdkhefjfdbeiihhikckgbijbjfghkbgghidgeikfjijhfiddgjkhdcfbhkbhecikdhjeekgjihcjjjgbbcckedffbhgkbebcchhicchiecbefedgeiicdhfdccbjhcfjgfjchgciedgkdkidbgbcgfegfjjfccjkbdgkihkddciedfibiikbkidbhkggiieckgbddceegehkcihjbgjcejedbkbkbhcbfkihdkkchdjeicjjhkcjfckccdggdcbfdbecifjiggedhebhkiedgjbeddhdejhidchkckjdjciigkhgdgebhdhcikfgikbigcdeeckbbcchhkgcecighfijbfbkigfcckdjgejjgjkdiggghddhbfhikkiihjkccjdchibkdifijdkcdkgheedgijkeechdfjjgjkfbhfgfgffgdiggkjigckcekgffbcidhgjhbjiifhkddfdkgfckhdkkcehiefheejgeijidfdkfkcdgceihbibgdeefihheekkbhbjikgebihgdgbijcicjekdcdgfeghdgkhebeekkhkhfchckgbdkbfbdjgjhckbfejfhkckickccieecefkjgfgjgehjgjdjbgcgdhedbbkfjbecjbhidkidiedjkggjdgejfikedccjkggkjgdiccdegekgjigjggeedfgkegghicfdbkiiedideeiebhdebffcfbgdebbcikiccbbkdhggcdfcjfekcdbbihdkkigbjeheggidejjkjhjhghhgkheegbiicdgkjghbbcefdgkjkejfdgfdbfdfejichkkebbdfbjhejbdcfbjffbjebefdfbhkkhegkehegikhhckkbfjkhjcdikjhhkhcibdfchgbjbiijikcfgbjfiibgiifdieieibfcfjebkecjeeibgjhgcbhgbchfghfhjbefckjhcecbdffhdhjkbhhjbkkkhhdgfgjfdihiiedeibkddgjhgcbkejibjkecjggicegifdigiceddbbhfcbgdkbdkjbgdiegdbheeeckejigecjjcgbegiffhicjhdhgjhhkgiihickjbgdccchckjicdddhcjikjfhdceekgjbcjjbkdbgiccebhgeihgcijfckhbfedjfgbhfjjhbcfjfeddgkbhhhgjkieifgdedbjfieggjddjidgdjhhkfkdhjjkckjfjkceffbeejbedcfjieiebeidgcjkgkfiiggkffgbdcjcdgjdkigfgdbdeiibgfkbkigkiecbdkbghgcigihibcbickffeeifjdkbhjebckbfbgbkjkjeghjdjbibfkdkfkkeccbeebgbifdjhkddgifichghkedbjhejgcijebekkedhebkbfijfcbbciekebhjgggcgjbbigiddbjgcjhjhijbkfgbejjecefjkcjkkehdejchddhgfggkdfdfejfgcejcbdgghfddkhcfccchdifbekhgkddkjejjhbdcfhceejiddfhkcchghihcbchdfbkhkfghgdjgcihekbgdcfjdkjijcjdjfegjjgcjdhjgehigehheecbcffhhjgkdeecbdcekjbbfccedkjbfggeedeghcjcjigdiedffeddhgcbedbkehkjebiehgfddgjgkkehedhdedcidjbbkfdkbfkdfkbbehhegikikkdfjbkckkjgiifggjhjedbckkifhieghgdibcgkkhkfckiicbebbjbigjbkhhkdijefjkkcijcddkjifecigjechjbehjgecekdeiddihhigdjjhicddkhdbdfckjcbbedckdikebhdfihfjkibdfjdeigibbifdcjkhcdjikhgejhjigkcjdjejdcccdchjcehjbfjeigkghfbkhhfigfkejikffcgigcjgjfkkbbeddgfgehkgefhicgfcikfddikeedkcdcbedcffeibhbbhigkbjbfdbeieikkjfkjhbcceecedjfijdkffbkhfjjgbfibkbeceihbhhfifgijbhkbbdcifkigjdcfkfkjbchfcbigkckdebcfcbkdbeikhhihhdeijkjdddhcebkhkfdccihddffgkfgdbhegkdkedfibeekigchkgeikciegjkddckgebjfdfjcekikkkiijhfkkkejhfggggikejicfeghbccbbfjibgdkihdhdidkcidkghkjkhfdjbcjcgdcchibkgbjibghgkifbkciijbhdcjdiffkcjhhcehbkbcehegkgkgicdgdfgfdhdeeeghfkefgkjdggcebjkciiiijkicfbcgdjfcgbibfgfhhejeikeffbdjgdbegkfgdgejhiidghdhbiebiicjejchfcdbkfgdeichjehjehhcgdiicghecckfcbejgbbhgjifgjedfegkhkhcikcikckghbcecdehjcijcgdbiddgfibeicikhbjcibheggijckgdkjchbbgjfebckehfdfbckicdeebiddbeekkckekbcgkgggfejdkfcigkkcibeihddgbfhhghcedjfkecjdhhehichdgfcgfekjhkkifdfkekfikghdffbhbbbbgecddkcdbdcehdegkdbcfhcfdcjcjhehfjkifhifgbijcdkggfiicibfhfkfgdfjbfiegehjeckeeigikdekdickdficcbhjfdjbdgiehhhebhgchkghkgcgigcgbhijjbdebciciiebfejjbgfhbikkjfhjkckkhbbegkcjcfkcbhcfkchdbbiikfkbckeeefgejgfbiedcddejifhkdjbfkbchfkdjgikiibdfifdfejikcghedbgdhgcckibdjieekkibkjddgcbbdheiigegckfdgfidghcehejgbbigjdidjhhbjkhcdgkdbgcihkhifgbhejihbkkgckjbbbdehcbfkfdkdhhfgdigkbhkckcjfebicibdkcckbfcegiehjibefhfkfkdjbcbggiihibheecggecikkhdecdcigcjfjcccijifikdjkgddjckffbbebdebigcddbbehdckebegigcdhieedhfekjjdccgkgjhkceejijjbcdbjgbiijgciiicgbkgbggkhjhjbijcbijjkihcjchkijhfdichcegefeiiikdeeghkifhdgdhhigcfhddidhfihcbbjhjbcgbcfhecchgcidiihhchiebegjjifbjjfeibdjeeigiggkeghcbdebgeikbffgcbceebbfkdhdbfkhifcebdkhjbhgggbhhgfeicjdjgidfgccjghbeikdihgdkfjihkkedcdiggjcehgfdkdbcfkijgeefecdjfdkchkgeijkkgbdgficgfecdjbfghfgjhhfckibkbekkgdceiiciejjhbfkfjfgjbdhgeiejcibikdkgihkkhefjjkhdjjhejfggegdcjdbciidfebejfghfddegjbjkibffiegbdfighckdiedcdjjgebebhefdfcdgjihdjbidjebjcbdkgcdedebckjiieccibbgeekcdcfdfcccbfdchfddgcbkjjfgfkedbhdfddjkfkddedghdfecidhijhjbchefghkhgkijbcffbheghcfhbikkfkceckghgechdffdgjiidhffibkeejecchhejebjhedghdfjjjkhckeggjcdcbbiibjgjhkhghiekgjeggccgihhhbccidfkhjhcjjegcgecfjeebigeggdgjjgdickbeedjeeggdeeddficcjiggjddkkjgekhgjjbhfjbejfghbbgkjjbejedicgidkejgjceehjgejbbbgkhedfhhekghhbccckjhfbfdkdggfbddjhedhekkehkbbccckjdfhhffhdibkfgbjbckffkhgjhkbgjbcijkjhcfccehkfcgcdjjkibfjffbdefjhiicchjjbceckihidckgjdiieejhfjjjfffigfeghfcbijihgjcjkfcidddhchdjfhgeijkdfffffbjdbfehddfbjfhgbcfbhejdidchfhcdbefccicickkkedffkgbdiccbcejbidifgbdgkgdgkeebkdefckigkkfeefdbcbbbcfdkdeigjgifejbiefbfcbbgkikgjgegkkcedgibgkkhiigdgijdgdcceejdfehfchkhiifbifckkggheihkcdgcjcjfjebfdcchdckggehchkeddejegdgbdidcdfgehbkhikgegkihdbgkckeekccfkjijeccbffcdcdfiecgdbfbjdkbggcgjdgcckkekciggdjjjheijjfbechfhfgigbdghekehgdfidkchkdbhiijgbbdbiecdgfhibfieifhjejihecgcdbdcedicjcfheibdbkkhcbhdhfjikggbbjejeekihhfbjebjjccdeidegchjdgchbkbhfdkbchcfibfdefdhdcjedbjikbggedbbijdiiggbjheghdcdddjekjdfbbhkjkgfedgiihfgkdkjjjkcgjjdfdegfjkbjhfjgjfkdicgjijbdjjdibfkjhfceedkikdidkhficbcibdkejcibcbbiefbcekfjijfjgjedkeigijgjgedjkbekgbcgiibjbjfdbdefhhgefgfgccbijjkghhjfebeffhffifbehkhgdkbhfciejgbfecihjicjcbgkgdikhiffdfdhcebjcgehdeheeehbficdbcbeejfgikcikghihchkhbigbehfdbjidfigifkkidfdiffgedikbkicbhejhijkgkkgebjdcigcebcijcdedckhbcfegcekjekbghbihhebjjefehffhccbgckbjgebjikicfjkhjhfgdcfbcfjhjfdciccgbhecbchfgdidegchckkegkdiehkjccidbckbbdbifejjkdgjdcecjffkbfgdfdbefkeebikjcbfjjccffgdcjhiigjihidggjddeibjihdiebkdedfhbbbcdjkdjckggkjdijikddifjgkkgceijfkbbhhdgbkcgekbcdkdigechfdhgfijfjfedcgcbfbghgjgjfgbgbdigfdcbiefcdgkffkkgcgkbideebfbjdhegbibdfgigfjcjeihjejjgfcfhkckdekiddffdfkgdecjckdgkbjkdcfijffkdfhkkfehejdbjhibjddhkfdjjbiibiffhijfbijhefkejekchhfccedcickkihfihhbkhbhbehdfejihcchibedhkifbidcbikbdcicgfgiiegikjfckhkbfjkhdchfbdhfhbkggjjdhcbhcggebhjcjecheeegbfghfbhjbjhhgkhgkggbikfgccbiigbiebefdkgckhjcjkbfikjccchdcgbcikcjehighkhijchibdfhjgjffikbhjdghjiehfdkcbcgkbchfdjihifddiijgiebchkkjbihddhjjechjghejgiijdfhefffjkbkcjkjekgcibieebhhbbccbcgicfjfejcbddkiikigfgebeddgcfiehhgecfgdjccdebjhjegjcckecdkbifjjicehjbbgjjjgbebibhckhighcekkefdbjhijgdjedjjdiehcfkfjfieccjdiecgdbiiechhikdfhgkjghdbdccbdibhfdcijdhdejgfgchegbkdigkeefhibhgcjgjcgbgdbjgbkekcbkbgcefkefbdkhcefkekfkghedikefcbbdifdfhbgfhgfbdbfkikjecckjkfdkffdbfeeiiibgkhehjbhgceegbhkkggdgjbbdkkbhibidfgijkgdedkfkhhhckdjgdbhbiejbdebbeeefegifkkgegfkcifijejceciefihjdgchbbbeddkkjedghfjbiecbjhicfefhefegiehgichbeccghhgjigbecdekbbiideddeihccjfffekehckjkbcidejchcbbfefebhckjbhjdkgfhddffefjigghidghbeggfbgjbhchdbchfekfkgkjcigggihibgifbbigecchejciccjijfehegjehcfijkebjejeckfheekjjgkhfceffhjcjfehccjgeegkcdgdgjkhgjfjjecbgbbcdhkkjbjggikfbikdfhdjiiedkehejjgbgdgdcekjbdkbgkkgbbbjigkkjgecbfdcjdkeegdiehbhbjikfkjdibceffkhfecijfjfccidjjbfhkkcgcibdkccbkddhhjjgikkcjfchhiebbhfccejeffhfggedfdhdcicfbbehbjbiifdicifhjgchicjfkcdbbbfgbkfgdfcjbkdeihghhfcckfkhfkhbhdgbeedjbckcieeghfifdgjgdgkkbdifgfhgckbckidhfddiddikcegbggdjgdeegjkdihbgegbedhdecijfhbdbdgjcdibdbieeccbcehjbkfidhbejfijkkhdbejbfeikkcjjifkkihibjgigfehigffebdjdkibgbdfhjfikgijcjccccefdhjgkkddhjkkghdjidgkkcgchkghijjjgkhkkhcjdeibjjikbckfbjegfhdehkkijjigeciccjcbcgcbgkefgghiigjekdcdeecbdkchkhgbeckkckjgcieckdgbdeehbfcggkbfdgcdccffchikdfbebcdkdbfjjkhkhihikcffijkgghdichfddbgehkhjdedkkjegghjdcbgedccebbddhefiekbegfjggcjijkddegbccdbfegigjheejhdhbikggeihfgddgjggkggfbfkhficfjgedeigddjchhcjihidfbjdecjhdfjjdkdiekhjgifbfdhbhgkjhkghgjebkfdfkcjhihhhbbgcjdcgbeidkghefbdejffdgjbfkefcjjjkkdgcgeddbkbbkedebhbeckgjkbcdgcfkgjfdcihcbgdckbcfjchdhjbfkcejfcdhijfcdejbfihiiggkhdickjbgehkjjkdibbfhjbegkjefbifhjjhcfbbjjjedhefkjijggbeehgikeeijhebgkegegkhkecjcdjkckbechkfhfhjbggejgbgkibdbcgbhjbkfdhdbbibjhggkehbgigekihbbdbekbegfieibibjjihfcfiebibkgehgjjkegbbfjkccigikibhffghjbijgigdbdijhegekheccedbeigiejdhfbcgkfjiecdcgieeiefibjecjiffghkgkfdkjccghjejdkeikcigcjbkkkdfbdkfebibiigcijkjkegjkeeigbhbfdbkcijhkdfkjecfcgghikfdbhdhhgbgjgeebckhccjhbhcfceckejbhghdbchfedebgbhihekkhcggdhfdfckdhfcdceddfihkidebcgjbhkhdibjfhiehbkihhdidkbeceidfdkckfgdbecifijcjcgkgeeiikdhkejbfhcdbedkfbbfijkhdedcbhjjdjhigibcicfhkcfkibkhbigdbbgifbckgedihffdhecdfihfbhcgdbdkdgkkdfgbhdjdhgiiegkbifcbdichegfebfgjkijjgibbibfggggbehjbfheecddegeicchfbffbihfeecffihiihjggfdbdijhiihkbceikhhdeifgbgjbkhkbecbfggiifckjbhfgcihejcigdkicbbehdfekfcefkiefddejbdgdgkdfedceececkbfeekibicfcggkeifdgdkieecehffechghkdiehicgkghggdcfghgjckigdhjjgfcecdbkfjhhjdjjbchkdchfdgbeihjbhijkgebdhcdegjikhjkhkceehefhiicjjjdgbkcjfhckijfieckgehbhkehikjjgbbfickkkdghekiicheeghjcfbekffkcjcihbecfkbcgbkbfecbicdghkjkbjejhhfdcffdkjfkdkkjjgjhccghkdfejbigjdhjckjkbjgfgfbedjicjjjjfhjfcbdikbefhdhijffjfgkdcdhijjikfcbciikjhhgjfjheecgechkkjjkghcbkjjbhidjbicjhbbieigjkhekhcbekkkcgghgcffkikgkeikgfgigcbggjhgciifdjebc";
		//output is 66516
		//String s = "aaaa";
		System.out.println("Total String length: " + s.length());
		List<String> specialPalindrome = new ArrayList<String>();
		StringBuilder sb = new StringBuilder();
		long count = 0;
		long total = 0;
		long numberOfTimes = 0;
		/*for (long i = 0; i < s.length(); i++)
		{
			//Find odd numbers
			total = total + findPalindrome(s, i, i, specialPalindrome, count, sb);
			// find even substring
			total = total + findPalindrome(s, i, i + 1, specialPalindrome, count, sb);
			numberOfTimes++;
		}*/

		//System.out.println(specialPalindrome.size());
		System.out.println("Toal Counter " + total + " Original String length: " + s.length() + " After String length: "
				+ numberOfTimes);
		//s = null;
		System.out.println("Total Substrings: " + sb.length());

		String[] bytes = sb.toString().split("~");
		int counter = 0;
		/*for (int i = 0; i < bytes.length; i++)
		{
			if (bytes[i].length() > 3 && midCharacter(bytes[i]) || bytes[i].length() <= 3)
			{
				counter++;
			}
		}*/
		/*try (OutputStream out = new FileOutputStream(file + "/" + "palindrom-" + executionTime + ".txt"))
		{
			out.write(bytes);
		}
		catch (Exception e)
		{
			// TODO: handle exception
		}*/
		System.out.println("Counter :: " + subtractCount(s.length(), s));
		long endTime = System.nanoTime();
		long executionTime = (endTime - startTime) / 1000;
		System.out.println("Total Execution :: " + executionTime);
	}

	private static long findPalindrome(String s, long odd, long even, List<String> specialPalindrome, long count,
			StringBuilder sb)
	{
		while (odd >= 0 && even < s.length() && (s.charAt((int) odd) == s.charAt((int) even)))
		{
			//System.out.println(String.format(" first index = %d, last index = %d substring value =%s", odd, even,
			//		s.substring((int) odd, (int) even + 1)));
			String ss = s.substring((int) odd, (int) even + 1);
			//if(sb.)
			sb = sb.append(ss).append("~");
			/*	if (ss.length() > 3 && midCharacter(ss) || ss.length() <= 3)
				{
					//specialPalindrome.add(ss);
					//count++;
				}*/
			/*if (ss.length() <= 3)
			{
				//specialPalindrome.add(ss);
				count++;
			}*/
			odd--;
			even++;
		}
		//System.out.println("Substrings: " + sb.length());
		return count;
	}

	/**
	 * find mid character and index of a given string
	 * @param s
	 * @return
	 */
	private static boolean midCharacter(String s)
	{
		int position;
		//int len = 0;
		/*if (s.length() % 2 == 0)
		{
			position = s.length() / 2 - 1;
			len = 2;
			System.out.println("even:");
		}
		else
		{
			position = s.length() / 2;
			len = 1;
		}*/
		position = s.length() / 2;
		String mid = s.length() % 2 == 0 ? s.substring(position - 1, (position - 1) + 2)
				: s.substring(position, position + 1);
		//s.substring(position, position + len);
		/*System.out.println(
				String.format("First character %c and last character %c are equal, mid = %s from Given String %s",
						s.charAt(1), s.charAt(s.length() - 1), mid, s));*/
		//&& (s.charAt(1) == s.charAt(s.length() - 1))
		if (mid.length() == 1 && s.contains(mid) && allCharacterSame(s, mid))
		{
			System.out.println(
					String.format("First character %c and last character %c are equal, mid = %s from Given String %s",
							s.charAt(1), s.charAt(s.length() - 1), mid, s));
			s = null;
			mid = null;
			return true;
		}
		else
		{
			return false;
		}

	}

	private static boolean allCharacterSame(String s, String mid)
	{
		int position = s.indexOf(mid);
		int midOnce = 0;
		for (int i = 0; i < s.length(); i++)
		{
			char c = s.charAt(i);

			if (s.charAt(0) != c && position != i)
			{
				return false;

			}
			else if (mid.equals("" + c) && position == i && !mid.equals("" + s.charAt(0)) && midOnce >= 1)
			{
				midOnce++;
				return true;
			}

		}
		return true;
	}

	public static long subtractCount(int len, String s)
	{
		long counter = 0;
		for (int i = 0; i < s.length(); i++)
		{
			int midPosition = 1;
			//find only aba, hhmhh
			while (i - midPosition >= 0 && i + midPosition < len && s.charAt(i - midPosition) == s.charAt(i - 1)
					&& s.charAt(i + midPosition) == s.charAt(i - 1))
			{
				midPosition++;
				counter++;

			}
			int repeatChar = 0;
			//find same character - aaa
			while (i + 1 < len && s.charAt(i) == s.charAt(i + 1))
			{
				repeatChar++;
				i++;
			}
			counter += repeatChar * (repeatChar + 1) / 2;
		}
		return len + counter;

	}
}
